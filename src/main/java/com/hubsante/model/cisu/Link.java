/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hubsante.model.cisu;

import java.util.Objects;
import java.util.Arrays;
    import com.fasterxml.jackson.annotation.JsonInclude;
    import com.fasterxml.jackson.annotation.JsonProperty;
    import com.fasterxml.jackson.annotation.JsonCreator;
    import com.fasterxml.jackson.annotation.JsonTypeName;
    import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
    import com.fasterxml.jackson.annotation.JsonPropertyOrder;
    import com.fasterxml.jackson.annotation.JsonTypeName;

        /**
* Link
*/
    @JsonPropertyOrder({
        Link.JSON_PROPERTY_SOURCE,
        Link.JSON_PROPERTY_TYPE,
        Link.JSON_PROPERTY_ID
    })
            @JsonTypeName("link")
    @JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Link {
              /**
   * Système fournissant le localisant :  NexSiS ou l&#39;ORG_ID (BAN, IGN, ...)
   */
  public enum SourceEnum {
    BAN("BAN"),
    
    IGN("IGN"),
    
    NEXSIS("NexSIS");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceEnum fromValue(String value) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

        public static final String JSON_PROPERTY_SOURCE = "source";
            private SourceEnum source;

        public static final String JSON_PROPERTY_TYPE = "type";
            private String type;

        public static final String JSON_PROPERTY_ID = "id";
            private String id;

public Link() {
}

        public Link source(SourceEnum source) {
        
        this.source = source;
        return this;
        }

    /**
        * Système fournissant le localisant :  NexSiS ou l&#39;ORG_ID (BAN, IGN, ...)
    * @return source
    **/
      @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SourceEnum getSource() {
        return source;
    }


          @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(SourceEnum source) {
                this.source = source;
        }


        public Link type(String type) {
        
        this.type = type;
        return this;
        }

    /**
        * Définition du type d&#39;objet dans le système Ex : SIG NexSIS / OSM ont plusieurs types de données -&gt; savoir du quel on parle (POI, tronçon de route, …) pour faciliter le filtre | Aussi table dans une base de données
    * @return type
    **/
      @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getType() {
        return type;
    }


          @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
                this.type = type;
        }


        public Link id(String id) {
        
        this.id = id;
        return this;
        }

    /**
        * Identifiant unique dans le type. Exemple : UUID d&#39;un ega
    * @return id
    **/
      @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getId() {
        return id;
    }


          @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
                this.id = id;
        }

@Override
public boolean equals(Object o) {
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }
        Link link = (Link) o;
        return Objects.equals(this.source, link.source) &&
        Objects.equals(this.type, link.type) &&
        Objects.equals(this.id, link.id);
}

    @Override
    public int hashCode() {
        return Objects.hash(source
            , type
            , id);
    }

    @Override
    public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Link {\n");
        sb.append("    source: ").append(toIndentedString(source)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
    if (o == null) {
    return "null";
    }
    return o.toString().replace("\n", "\n    ");
    }

    }
