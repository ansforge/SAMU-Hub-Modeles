/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hubsante.model.cisu;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hubsante.model.cisu.CallerName;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Caller
 */
@JsonPropertyOrder({
        Caller.JSON_PROPERTY_CALLER_U_R_I,
        Caller.JSON_PROPERTY_CALLBACK_U_R_I,
        Caller.JSON_PROPERTY_SPOKEN_LANGUAGE,
        Caller.JSON_PROPERTY_CALLER_INFORMATION,
        Caller.JSON_PROPERTY_CALLER_NAME
})
@JsonTypeName("caller")
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-18T10:47:59.409+02:00[Europe/Paris]")
public class Caller {
    public static final String JSON_PROPERTY_CALLER_U_R_I = "callerURI";
    private String callerURI;

    public static final String JSON_PROPERTY_CALLBACK_U_R_I = "callbackURI";
    private String callbackURI;

    public static final String JSON_PROPERTY_SPOKEN_LANGUAGE = "spokenLanguage";
    private String spokenLanguage;

    public static final String JSON_PROPERTY_CALLER_INFORMATION = "callerInformation";
    private String callerInformation;

    public static final String JSON_PROPERTY_CALLER_NAME = "callerName";
    private CallerName callerName;

    public Caller() {
    }

    public Caller callerURI(String callerURI) {

        this.callerURI = callerURI;
        return this;
    }

    /**
     * Type de l&#39;URI utilisée par le réquérant et valeur. Ne peut contenir qu&#39;une URI.Exemple : tel:+33611223344 OU sip:top@domain.org. Le numéro de téléphone doit être renseigné en priorité, à défaut, renseigner un autre type d&#39;URI. Si ce numéro est renseigné, il devient prioritaire par rapport au numéro d&#39;appel.
     *
     * @return callerURI
     **/
    @JsonProperty(JSON_PROPERTY_CALLER_U_R_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCallerURI() {
        return callerURI;
    }


    @JsonProperty(JSON_PROPERTY_CALLER_U_R_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCallerURI(String callerURI) {
        this.callerURI = callerURI;
    }


    public Caller callbackURI(String callbackURI) {

        this.callbackURI = callbackURI;
        return this;
    }

    /**
     * Type et valeur de l&#39;URI permettant un rappel pour avoir plus d&#39;informations : il peut s&#39;agit du requérant, de la victime ou d&#39;un témoin. Ne peut contenir qu&#39;une URI.Exemple : tel:+33611223344 OU sip:top@domain.org. Le numéro de téléphone doit être renseigné en priorité, à défaut, renseigner un autre type d&#39;URI. Si le numéro de contre-appel est renseigné, il doit être utilisé en priorité sur le numéro réquérant.
     *
     * @return callbackURI
     **/
    @JsonProperty(JSON_PROPERTY_CALLBACK_U_R_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCallbackURI() {
        return callbackURI;
    }


    @JsonProperty(JSON_PROPERTY_CALLBACK_U_R_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCallbackURI(String callbackURI) {
        this.callbackURI = callbackURI;
    }


    public Caller spokenLanguage(String spokenLanguage) {

        this.spokenLanguage = spokenLanguage;
        return this;
    }

    /**
     * Langue parlée par le requérant. Permet de mettre en place des traducteurs si besoin.
     *
     * @return spokenLanguage
     **/
    @JsonProperty(JSON_PROPERTY_SPOKEN_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSpokenLanguage() {
        return spokenLanguage;
    }


    @JsonProperty(JSON_PROPERTY_SPOKEN_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSpokenLanguage(String spokenLanguage) {
        this.spokenLanguage = spokenLanguage;
    }


    public Caller callerInformation(String callerInformation) {

        this.callerInformation = callerInformation;
        return this;
    }

    /**
     * Information sur le requérant : malentendant, impliqué dans l&#39;accident, …
     *
     * @return callerInformation
     **/
    @JsonProperty(JSON_PROPERTY_CALLER_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCallerInformation() {
        return callerInformation;
    }


    @JsonProperty(JSON_PROPERTY_CALLER_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCallerInformation(String callerInformation) {
        this.callerInformation = callerInformation;
    }


    public Caller callerName(CallerName callerName) {

        this.callerName = callerName;
        return this;
    }

    /**
     * Get callerName
     *
     * @return callerName
     **/
    @JsonProperty(JSON_PROPERTY_CALLER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public CallerName getCallerName() {
        return callerName;
    }


    @JsonProperty(JSON_PROPERTY_CALLER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCallerName(CallerName callerName) {
        this.callerName = callerName;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Caller caller = (Caller) o;
        return Objects.equals(this.callerURI, caller.callerURI) &&
                Objects.equals(this.callbackURI, caller.callbackURI) &&
                Objects.equals(this.spokenLanguage, caller.spokenLanguage) &&
                Objects.equals(this.callerInformation, caller.callerInformation) &&
                Objects.equals(this.callerName, caller.callerName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(callerURI
                , callbackURI
                , spokenLanguage
                , callerInformation
                , callerName);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Caller {\n");
        sb.append("    callerURI: ").append(toIndentedString(callerURI)).append("\n");
        sb.append("    callbackURI: ").append(toIndentedString(callbackURI)).append("\n");
        sb.append("    spokenLanguage: ").append(toIndentedString(spokenLanguage)).append("\n");
        sb.append("    callerInformation: ").append(toIndentedString(callerInformation)).append("\n");
        sb.append("    callerName: ").append(toIndentedString(callerName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
