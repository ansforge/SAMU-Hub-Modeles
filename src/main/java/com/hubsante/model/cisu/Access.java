/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.cisu;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Access
 */
@JsonPropertyOrder(
    {Access.JSON_PROPERTY_FLOOR, Access.JSON_PROPERTY_ROOM_NUMBER,
     Access.JSON_PROPERTY_INTERPHONE, Access.JSON_PROPERTY_ACCESS_CODE,
     Access.JSON_PROPERTY_ELEVATOR, Access.JSON_PROPERTY_BUILDING_NAME,
     Access.JSON_PROPERTY_ENTRANCE, Access.JSON_PROPERTY_ENTITY,
     Access.JSON_PROPERTY_LOCPHONENUMBER})
@JsonTypeName("access")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Access {
  public static final String JSON_PROPERTY_FLOOR = "floor";
  private JsonNullable<Object> floor = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ROOM_NUMBER = "roomNumber";
  private JsonNullable<Object> roomNumber = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_INTERPHONE = "interphone";
  private JsonNullable<Object> interphone = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ACCESS_CODE = "accessCode";
  private List<Object> accessCode;

  public static final String JSON_PROPERTY_ELEVATOR = "elevator";
  private JsonNullable<Object> elevator = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_BUILDING_NAME = "buildingName";
  private JsonNullable<Object> buildingName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ENTRANCE = "entrance";
  private JsonNullable<Object> entrance = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private JsonNullable<Object> entity = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_LOCPHONENUMBER = "locphonenumber";
  private BigDecimal locphonenumber;

  public Access() {}

  public Access floor(Object floor) {
    this.floor = JsonNullable.<Object>of(floor);

    return this;
  }

  /**
   * Etage
   * @return floor
   **/
  @JsonIgnore

  public Object getFloor() {
    return floor.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FLOOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFloor_JsonNullable() {
    return floor;
  }

  @JsonProperty(JSON_PROPERTY_FLOOR)

  public void setFloor(Object floor) {
    this.floor = JsonNullable.<Object>of(floor);
  }

  public Access roomNumber(Object roomNumber) {
    this.roomNumber = JsonNullable.<Object>of(roomNumber);

    return this;
  }

  /**
   * Spécifie numéro d&#39;appartement, de chambre, de bureau
   * @return roomNumber
   **/
  @JsonIgnore

  public Object getRoomNumber() {
    return roomNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROOM_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getRoomNumber_JsonNullable() {
    return roomNumber;
  }

  @JsonProperty(JSON_PROPERTY_ROOM_NUMBER)

  public void setRoomNumber(Object roomNumber) {
    this.roomNumber = JsonNullable.<Object>of(roomNumber);
  }

  public Access interphone(Object interphone) {
    this.interphone = JsonNullable.<Object>of(interphone);

    return this;
  }

  /**
   * Indique les informations nécessaires  à l&#39;identification de
   *l&#39;interphone (numéro, nom)
   * @return interphone
   **/
  @JsonIgnore

  public Object getInterphone() {
    return interphone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERPHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getInterphone_JsonNullable() {
    return interphone;
  }

  @JsonProperty(JSON_PROPERTY_INTERPHONE)

  public void setInterphone(Object interphone) {
    this.interphone = JsonNullable.<Object>of(interphone);
  }

  public Access accessCode(List<Object> accessCode) {

    this.accessCode = accessCode;
    return this;
  }

  public Access addAccessCodeItem(Object accessCodeItem) {
    if (this.accessCode == null) {
      this.accessCode = new ArrayList<>();
    }
    this.accessCode.add(accessCodeItem);
    return this;
  }

  /**
   * Get accessCode
   * @return accessCode
   **/
  @JsonProperty(JSON_PROPERTY_ACCESS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getAccessCode() {
    return accessCode;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_ACCESS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessCode(List<Object> accessCode) {
    if (accessCode == null) {
      return;
    }
    if (this.accessCode == null) {
      this.accessCode = new ArrayList<>();
    }
    this.accessCode.addAll(accessCode);
  }

  public Access elevator(Object elevator) {
    this.elevator = JsonNullable.<Object>of(elevator);

    return this;
  }

  /**
   * Indique l&#39;ascenseur ou la cage d&#39;escalier
   * @return elevator
   **/
  @JsonIgnore

  public Object getElevator() {
    return elevator.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ELEVATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getElevator_JsonNullable() {
    return elevator;
  }

  @JsonProperty(JSON_PROPERTY_ELEVATOR)

  public void setElevator(Object elevator) {
    this.elevator = JsonNullable.<Object>of(elevator);
  }

  public Access buildingName(Object buildingName) {
    this.buildingName = JsonNullable.<Object>of(buildingName);

    return this;
  }

  /**
   * Nom du bâtiment
   * @return buildingName
   **/
  @JsonIgnore

  public Object getBuildingName() {
    return buildingName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUILDING_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getBuildingName_JsonNullable() {
    return buildingName;
  }

  @JsonProperty(JSON_PROPERTY_BUILDING_NAME)

  public void setBuildingName(Object buildingName) {
    this.buildingName = JsonNullable.<Object>of(buildingName);
  }

  public Access entrance(Object entrance) {
    this.entrance = JsonNullable.<Object>of(entrance);

    return this;
  }

  /**
   * Get entrance
   * @return entrance
   **/
  @JsonIgnore

  public Object getEntrance() {
    return entrance.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTRANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEntrance_JsonNullable() {
    return entrance;
  }

  @JsonProperty(JSON_PROPERTY_ENTRANCE)

  public void setEntrance(Object entrance) {
    this.entrance = JsonNullable.<Object>of(entrance);
  }

  public Access entity(Object entity) {
    this.entity = JsonNullable.<Object>of(entity);

    return this;
  }

  /**
   * Nom du service concerné au sein de l&#39;établissement
   * @return entity
   **/
  @JsonIgnore

  public Object getEntity() {
    return entity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getEntity_JsonNullable() {
    return entity;
  }

  @JsonProperty(JSON_PROPERTY_ENTITY)

  public void setEntity(Object entity) {
    this.entity = JsonNullable.<Object>of(entity);
  }

  public Access locphonenumber(BigDecimal locphonenumber) {

    this.locphonenumber = locphonenumber;
    return this;
  }

  /**
   * Numéro de téléphone permettant d&#39;accéder au lieu de l&#39;intervention,
   *par exemple : téléphone du secrétariat, téléphone du service administratif
   *ou se trouve le patient/victime.
   * @return locphonenumber
   **/
  @JsonProperty(JSON_PROPERTY_LOCPHONENUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLocphonenumber() {
    return locphonenumber;
  }

  @JsonProperty(JSON_PROPERTY_LOCPHONENUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocphonenumber(BigDecimal locphonenumber) {
    this.locphonenumber = locphonenumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Access access = (Access)o;
    return equalsNullable(this.floor, access.floor) &&
        equalsNullable(this.roomNumber, access.roomNumber) &&
        equalsNullable(this.interphone, access.interphone) &&
        Objects.equals(this.accessCode, access.accessCode) &&
        equalsNullable(this.elevator, access.elevator) &&
        equalsNullable(this.buildingName, access.buildingName) &&
        equalsNullable(this.entrance, access.entrance) &&
        equalsNullable(this.entity, access.entity) &&
        Objects.equals(this.locphonenumber, access.locphonenumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a,
                                            JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() &&
                      b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        hashCodeNullable(floor), hashCodeNullable(roomNumber),
        hashCodeNullable(interphone), accessCode, hashCodeNullable(elevator),
        hashCodeNullable(buildingName), hashCodeNullable(entrance),
        hashCodeNullable(entity), locphonenumber);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Access {\n");
    sb.append("    floor: ").append(toIndentedString(floor)).append("\n");
    sb.append("    roomNumber: ")
        .append(toIndentedString(roomNumber))
        .append("\n");
    sb.append("    interphone: ")
        .append(toIndentedString(interphone))
        .append("\n");
    sb.append("    accessCode: ")
        .append(toIndentedString(accessCode))
        .append("\n");
    sb.append("    elevator: ").append(toIndentedString(elevator)).append("\n");
    sb.append("    buildingName: ")
        .append(toIndentedString(buildingName))
        .append("\n");
    sb.append("    entrance: ").append(toIndentedString(entrance)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    locphonenumber: ")
        .append(toIndentedString(locphonenumber))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
