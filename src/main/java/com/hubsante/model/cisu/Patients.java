/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.cisu;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.cisu.Identifier;
import com.hubsante.model.cisu.Nomenclature;
import com.hubsante.model.cisu.Patinfo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * Patients
 */
@JsonPropertyOrder({Patients.JSON_PROPERTY_PATIENTCASE_I_D,
                    Patients.JSON_PROPERTY_PATIENT_FILE,
                    Patients.JSON_PROPERTY_PATIENTWHATS_HAPPEN,
                    Patients.JSON_PROPERTY_PATINFO})
@JsonTypeName("patients")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Patients {
  public static final String JSON_PROPERTY_PATIENTCASE_I_D = "patientcaseID";
  private String patientcaseID;

  public static final String JSON_PROPERTY_PATIENT_FILE = "patientFile";
  private List<Identifier> patientFile;

  public static final String JSON_PROPERTY_PATIENTWHATS_HAPPEN =
      "patientwhatsHappen";
  private Nomenclature patientwhatsHappen;

  public static final String JSON_PROPERTY_PATINFO = "patinfo";
  private Patinfo patinfo;

  public Patients() {}

  public Patients patientcaseID(String patientcaseID) {

    this.patientcaseID = patientcaseID;
    return this;
  }

  /**
   * Identifiant technique du patient pour permettre les rapprochements
   *d&#39;infos. Le 1er qui créé l&#39;ID patient a raison.
   * @return patientcaseID
   **/
  @JsonProperty(JSON_PROPERTY_PATIENTCASE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPatientcaseID() {
    return patientcaseID;
  }

  @JsonProperty(JSON_PROPERTY_PATIENTCASE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPatientcaseID(String patientcaseID) {
    this.patientcaseID = patientcaseID;
  }

  public Patients patientFile(List<Identifier> patientFile) {

    this.patientFile = patientFile;
    return this;
  }

  public Patients addPatientFileItem(Identifier patientFileItem) {
    if (this.patientFile == null) {
      this.patientFile = new ArrayList<>();
    }
    this.patientFile.add(patientFileItem);
    return this;
  }

  /**
   * Get patientFile
   * @return patientFile
   **/
  @JsonProperty(JSON_PROPERTY_PATIENT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Identifier> getPatientFile() {
    return patientFile;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_PATIENT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientFile(List<Identifier> patientFile) {
    if (patientFile == null) {
      return;
    }
    if (this.patientFile == null) {
      this.patientFile = new ArrayList<>();
    }
    this.patientFile.addAll(patientFile);
  }

  public Patients patientwhatsHappen(Nomenclature patientwhatsHappen) {

    this.patientwhatsHappen = patientwhatsHappen;
    return this;
  }

  /**
   * Get patientwhatsHappen
   * @return patientwhatsHappen
   **/
  @JsonProperty(JSON_PROPERTY_PATIENTWHATS_HAPPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Nomenclature getPatientwhatsHappen() {
    return patientwhatsHappen;
  }

  @JsonProperty(JSON_PROPERTY_PATIENTWHATS_HAPPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientwhatsHappen(Nomenclature patientwhatsHappen) {
    this.patientwhatsHappen = patientwhatsHappen;
  }

  public Patients patinfo(Patinfo patinfo) {

    this.patinfo = patinfo;
    return this;
  }

  /**
   * Get patinfo
   * @return patinfo
   **/
  @JsonProperty(JSON_PROPERTY_PATINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Patinfo getPatinfo() {
    return patinfo;
  }

  @JsonProperty(JSON_PROPERTY_PATINFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatinfo(Patinfo patinfo) {
    this.patinfo = patinfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Patients patients = (Patients)o;
    return Objects.equals(this.patientcaseID, patients.patientcaseID) &&
        Objects.equals(this.patientFile, patients.patientFile) &&
        Objects.equals(this.patientwhatsHappen, patients.patientwhatsHappen) &&
        Objects.equals(this.patinfo, patients.patinfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(patientcaseID, patientFile, patientwhatsHappen,
                        patinfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Patients {\n");
    sb.append("    patientcaseID: ")
        .append(toIndentedString(patientcaseID))
        .append("\n");
    sb.append("    patientFile: ")
        .append(toIndentedString(patientFile))
        .append("\n");
    sb.append("    patientwhatsHappen: ")
        .append(toIndentedString(patientwhatsHappen))
        .append("\n");
    sb.append("    patinfo: ").append(toIndentedString(patinfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
