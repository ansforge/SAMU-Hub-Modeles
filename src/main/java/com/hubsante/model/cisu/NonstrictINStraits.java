/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.cisu;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.util.Arrays;
import java.util.Arrays;
import java.util.Objects;

/**
 * NonstrictINStraits
 */
@JsonPropertyOrder({NonstrictINStraits.JSON_PROPERTY_CUSTOMARYNAME,
                    NonstrictINStraits.JSON_PROPERTY_CUSTOMARYFIRSTNAME})
@JsonTypeName("nonstrictINStraits")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class NonstrictINStraits {
  public static final String JSON_PROPERTY_CUSTOMARYNAME = "customaryname";
  private String customaryname;

  public static final String JSON_PROPERTY_CUSTOMARYFIRSTNAME =
      "customaryfirstname";
  private String customaryfirstname;

  public NonstrictINStraits() {}

  public NonstrictINStraits customaryname(String customaryname) {

    this.customaryname = customaryname;
    return this;
  }

  /**
   * Nom porté dans la vie courante. Le nom utilisé peut être similaire au nom
   *de naissance.
   * @return customaryname
   **/
  @JsonProperty(JSON_PROPERTY_CUSTOMARYNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomaryname() {
    return customaryname;
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMARYNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomaryname(String customaryname) {
    this.customaryname = customaryname;
  }

  public NonstrictINStraits customaryfirstname(String customaryfirstname) {

    this.customaryfirstname = customaryfirstname;
    return this;
  }

  /**
   * Prénom porté dans la vie courante. Le prénom utilisé peut être l’un des
   *prénom(s) de naissance ou tout autre prénom choisi par l’usager.
   * @return customaryfirstname
   **/
  @JsonProperty(JSON_PROPERTY_CUSTOMARYFIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomaryfirstname() {
    return customaryfirstname;
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMARYFIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomaryfirstname(String customaryfirstname) {
    this.customaryfirstname = customaryfirstname;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NonstrictINStraits nonstrictINStraits = (NonstrictINStraits)o;
    return Objects.equals(this.customaryname,
                          nonstrictINStraits.customaryname) &&
        Objects.equals(this.customaryfirstname,
                       nonstrictINStraits.customaryfirstname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customaryname, customaryfirstname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NonstrictINStraits {\n");
    sb.append("    customaryname: ")
        .append(toIndentedString(customaryname))
        .append("\n");
    sb.append("    customaryfirstname: ")
        .append(toIndentedString(customaryfirstname))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
