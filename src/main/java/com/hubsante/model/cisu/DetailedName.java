/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.cisu;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.util.Arrays;
import java.util.Arrays;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * DetailedName
 */
@JsonPropertyOrder({DetailedName.JSON_PROPERTY_COMPLETE,
                    DetailedName.JSON_PROPERTY_LAST_NAME,
                    DetailedName.JSON_PROPERTY_FIRST_NAME})
@JsonTypeName("detailedName")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class DetailedName {
  public static final String JSON_PROPERTY_COMPLETE = "complete";
  private String complete;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private JsonNullable<Object> lastName = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private JsonNullable<Object> firstName = JsonNullable.<Object>of(null);

  public DetailedName() {}

  public DetailedName complete(String complete) {

    this.complete = complete;
    return this;
  }

  /**
   * Prénom et nom usuel du requérant. Si les champs callerLastName et
   *callerFirstName sont renseignés, le champ callerName doit être valorisé
   *ainsi : \&quot;{callerFirstName} {callerLastName}\&quot;. Note : NexSIS ne
   *dispose que de ces informations (concaténées) et pas de deux champs séparés.
   * @return complete
   **/
  @JsonProperty(JSON_PROPERTY_COMPLETE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getComplete() {
    return complete;
  }

  @JsonProperty(JSON_PROPERTY_COMPLETE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComplete(String complete) {
    this.complete = complete;
  }

  public DetailedName lastName(Object lastName) {
    this.lastName = JsonNullable.<Object>of(lastName);

    return this;
  }

  /**
   * Nom du requérant
   * @return lastName
   **/
  @JsonIgnore

  public Object getLastName() {
    return lastName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getLastName_JsonNullable() {
    return lastName;
  }

  @JsonProperty(JSON_PROPERTY_LAST_NAME)

  public void setLastName(Object lastName) {
    this.lastName = JsonNullable.<Object>of(lastName);
  }

  public DetailedName firstName(Object firstName) {
    this.firstName = JsonNullable.<Object>of(firstName);

    return this;
  }

  /**
   * Prénom du réquérant. Par convention les prénoms composés doivent
   *préférablement être séparés par le caractère \&quot;-\&quot;
   * @return firstName
   **/
  @JsonIgnore

  public Object getFirstName() {
    return firstName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFirstName_JsonNullable() {
    return firstName;
  }

  @JsonProperty(JSON_PROPERTY_FIRST_NAME)

  public void setFirstName(Object firstName) {
    this.firstName = JsonNullable.<Object>of(firstName);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedName detailedName = (DetailedName)o;
    return Objects.equals(this.complete, detailedName.complete) &&
        equalsNullable(this.lastName, detailedName.lastName) &&
        equalsNullable(this.firstName, detailedName.firstName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a,
                                            JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() &&
                      b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(complete, hashCodeNullable(lastName),
                        hashCodeNullable(firstName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedName {\n");
    sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    firstName: ")
        .append(toIndentedString(firstName))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
