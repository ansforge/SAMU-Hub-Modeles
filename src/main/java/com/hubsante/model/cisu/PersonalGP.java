/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.cisu;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.cisu.Contact;
import com.hubsante.model.cisu.PersonalAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * PersonalGP
 */
@JsonPropertyOrder(
    {PersonalGP.JSON_PROPERTY_GPNAME, PersonalGP.JSON_PROPERTY_GPFIRSTNAME,
     PersonalGP.JSON_PROPERTY_G_P_I_D, PersonalGP.JSON_PROPERTY_GP_ADDRESS,
     PersonalGP.JSON_PROPERTY_GP_CONTACT})
@JsonTypeName("personalGP")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class PersonalGP {
  public static final String JSON_PROPERTY_GPNAME = "GPname";
  private String gpname;

  public static final String JSON_PROPERTY_GPFIRSTNAME = "GPfirstname";
  private String gpfirstname;

  public static final String JSON_PROPERTY_G_P_I_D = "GPID";
  private String GPID;

  public static final String JSON_PROPERTY_GP_ADDRESS = "GPAddress";
  private PersonalAddress gpAddress;

  public static final String JSON_PROPERTY_GP_CONTACT = "GPContact";
  private List<Contact> gpContact;

  public PersonalGP() {}

  public PersonalGP gpname(String gpname) {

    this.gpname = gpname;
    return this;
  }

  /**
   * Nom du médecin traitant du patient si connu
   * @return gpname
   **/
  @JsonProperty(JSON_PROPERTY_GPNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGpname() {
    return gpname;
  }

  @JsonProperty(JSON_PROPERTY_GPNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGpname(String gpname) {
    this.gpname = gpname;
  }

  public PersonalGP gpfirstname(String gpfirstname) {

    this.gpfirstname = gpfirstname;
    return this;
  }

  /**
   * Prénom du médecin traitant du patient si connu
   * @return gpfirstname
   **/
  @JsonProperty(JSON_PROPERTY_GPFIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGpfirstname() {
    return gpfirstname;
  }

  @JsonProperty(JSON_PROPERTY_GPFIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGpfirstname(String gpfirstname) {
    this.gpfirstname = gpfirstname;
  }

  public PersonalGP GPID(String GPID) {

    this.GPID = GPID;
    return this;
  }

  /**
   * Numéro RPPS du médecin traitant
   * @return GPID
   **/
  @JsonProperty(JSON_PROPERTY_G_P_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGPID() {
    return GPID;
  }

  @JsonProperty(JSON_PROPERTY_G_P_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGPID(String GPID) {
    this.GPID = GPID;
  }

  public PersonalGP gpAddress(PersonalAddress gpAddress) {

    this.gpAddress = gpAddress;
    return this;
  }

  /**
   * Get gpAddress
   * @return gpAddress
   **/
  @JsonProperty(JSON_PROPERTY_GP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PersonalAddress getGpAddress() {
    return gpAddress;
  }

  @JsonProperty(JSON_PROPERTY_GP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGpAddress(PersonalAddress gpAddress) {
    this.gpAddress = gpAddress;
  }

  public PersonalGP gpContact(List<Contact> gpContact) {

    this.gpContact = gpContact;
    return this;
  }

  public PersonalGP addGpContactItem(Contact gpContactItem) {
    if (this.gpContact == null) {
      this.gpContact = new ArrayList<>();
    }
    this.gpContact.add(gpContactItem);
    return this;
  }

  /**
   * Get gpContact
   * @return gpContact
   **/
  @JsonProperty(JSON_PROPERTY_GP_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Contact> getGpContact() {
    return gpContact;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_GP_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGpContact(List<Contact> gpContact) {
    if (gpContact == null) {
      return;
    }
    if (this.gpContact == null) {
      this.gpContact = new ArrayList<>();
    }
    this.gpContact.addAll(gpContact);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalGP personalGP = (PersonalGP)o;
    return Objects.equals(this.gpname, personalGP.gpname) &&
        Objects.equals(this.gpfirstname, personalGP.gpfirstname) &&
        Objects.equals(this.GPID, personalGP.GPID) &&
        Objects.equals(this.gpAddress, personalGP.gpAddress) &&
        Objects.equals(this.gpContact, personalGP.gpContact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gpname, gpfirstname, GPID, gpAddress, gpContact);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalGP {\n");
    sb.append("    gpname: ").append(toIndentedString(gpname)).append("\n");
    sb.append("    gpfirstname: ")
        .append(toIndentedString(gpfirstname))
        .append("\n");
    sb.append("    GPID: ").append(toIndentedString(GPID)).append("\n");
    sb.append("    gpAddress: ")
        .append(toIndentedString(gpAddress))
        .append("\n");
    sb.append("    gpContact: ")
        .append(toIndentedString(gpContact))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
