/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.cisu;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.util.Arrays;
import java.util.Arrays;
import java.util.Objects;

/**
 * Operators
 */
@JsonPropertyOrder(
    {Operators.JSON_PROPERTY_OPNAME, Operators.JSON_PROPERTY_OPFIRSTNAME,
     Operators.JSON_PROPERTY_OPID, Operators.JSON_PROPERTY_OPROLE})
@JsonTypeName("operators")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Operators {
  public static final String JSON_PROPERTY_OPNAME = "opname";
  private String opname;

  public static final String JSON_PROPERTY_OPFIRSTNAME = "opfirstname";
  private String opfirstname;

  public static final String JSON_PROPERTY_OPID = "opid";
  private String opid;

  public static final String JSON_PROPERTY_OPROLE = "oprole";
  private String oprole;

  public Operators() {}

  public Operators opname(String opname) {

    this.opname = opname;
    return this;
  }

  /**
   * Nom de famille de l&#39;opérateur
   * @return opname
   **/
  @JsonProperty(JSON_PROPERTY_OPNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOpname() {
    return opname;
  }

  @JsonProperty(JSON_PROPERTY_OPNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOpname(String opname) {
    this.opname = opname;
  }

  public Operators opfirstname(String opfirstname) {

    this.opfirstname = opfirstname;
    return this;
  }

  /**
   * Prénom de l&#39;opérateur référent
   * @return opfirstname
   **/
  @JsonProperty(JSON_PROPERTY_OPFIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOpfirstname() {
    return opfirstname;
  }

  @JsonProperty(JSON_PROPERTY_OPFIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpfirstname(String opfirstname) {
    this.opfirstname = opfirstname;
  }

  public Operators opid(String opid) {

    this.opid = opid;
    return this;
  }

  /**
   * Identifiant professionnel de l&#39;opérateur si existant
   * @return opid
   **/
  @JsonProperty(JSON_PROPERTY_OPID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOpid() {
    return opid;
  }

  @JsonProperty(JSON_PROPERTY_OPID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpid(String opid) {
    this.opid = opid;
  }

  public Operators oprole(String oprole) {

    this.oprole = oprole;
    return this;
  }

  /**
   * Rôle de l&#39;opérateur au sein de l&#39;entité émettrice du message
   * @return oprole
   **/
  @JsonProperty(JSON_PROPERTY_OPROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOprole() {
    return oprole;
  }

  @JsonProperty(JSON_PROPERTY_OPROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOprole(String oprole) {
    this.oprole = oprole;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Operators operators = (Operators)o;
    return Objects.equals(this.opname, operators.opname) &&
        Objects.equals(this.opfirstname, operators.opfirstname) &&
        Objects.equals(this.opid, operators.opid) &&
        Objects.equals(this.oprole, operators.oprole);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opname, opfirstname, opid, oprole);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Operators {\n");
    sb.append("    opname: ").append(toIndentedString(opname)).append("\n");
    sb.append("    opfirstname: ")
        .append(toIndentedString(opfirstname))
        .append("\n");
    sb.append("    opid: ").append(toIndentedString(opid)).append("\n");
    sb.append("    oprole: ").append(toIndentedString(oprole)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
