/**
 * Copyright Â© 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.cisu;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.cisu.Contact;
import com.hubsante.model.cisu.INScycle;
import com.hubsante.model.cisu.MatINS;
import com.hubsante.model.cisu.NonstrictINStraits;
import com.hubsante.model.cisu.Patientid;
import com.hubsante.model.cisu.PersonalAddress;
import com.hubsante.model.cisu.PersonalGP;
import com.hubsante.model.cisu.StrictINStraits;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * Identifier
 */
@JsonPropertyOrder({Identifier.JSON_PROPERTY_PATIENT_I_D,
                    Identifier.JSON_PROPERTY_IN_SCYCLE,
                    Identifier.JSON_PROPERTY_MAT_I_N_S,
                    Identifier.JSON_PROPERTY_STRICT_I_N_STRAITS,
                    Identifier.JSON_PROPERTY_NONSTRICT_I_N_STRAITS,
                    Identifier.JSON_PROPERTY_PATIENT_CONTACT,
                    Identifier.JSON_PROPERTY_PATIENT_ADDRESS,
                    Identifier.JSON_PROPERTY_PERSONAL_G_P})
@JsonTypeName("identifier")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Identifier {
  public static final String JSON_PROPERTY_PATIENT_I_D = "patientID";
  private List<Patientid> patientID;

  public static final String JSON_PROPERTY_IN_SCYCLE = "INScycle";
  private INScycle inScycle;

  public static final String JSON_PROPERTY_MAT_I_N_S = "matINS";
  private MatINS matINS;

  public static final String JSON_PROPERTY_STRICT_I_N_STRAITS =
      "strictINStraits";
  private StrictINStraits strictINStraits;

  public static final String JSON_PROPERTY_NONSTRICT_I_N_STRAITS =
      "nonstrictINStraits";
  private NonstrictINStraits nonstrictINStraits;

  public static final String JSON_PROPERTY_PATIENT_CONTACT = "patientContact";
  private List<Contact> patientContact;

  public static final String JSON_PROPERTY_PATIENT_ADDRESS = "patientAddress";
  private PersonalAddress patientAddress;

  public static final String JSON_PROPERTY_PERSONAL_G_P = "personalGP";
  private PersonalGP personalGP;

  public Identifier() {}

  public Identifier patientID(List<Patientid> patientID) {

    this.patientID = patientID;
    return this;
  }

  public Identifier addPatientIDItem(Patientid patientIDItem) {
    if (this.patientID == null) {
      this.patientID = new ArrayList<>();
    }
    this.patientID.add(patientIDItem);
    return this;
  }

  /**
   * Get patientID
   * @return patientID
   **/
  @JsonProperty(JSON_PROPERTY_PATIENT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Patientid> getPatientID() {
    return patientID;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_PATIENT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientID(List<Patientid> patientID) {
    if (patientID == null) {
      return;
    }
    if (this.patientID == null) {
      this.patientID = new ArrayList<>();
    }
    this.patientID.addAll(patientID);
  }

  public Identifier inScycle(INScycle inScycle) {

    this.inScycle = inScycle;
    return this;
  }

  /**
   * Get inScycle
   * @return inScycle
   **/
  @JsonProperty(JSON_PROPERTY_IN_SCYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public INScycle getInScycle() {
    return inScycle;
  }

  @JsonProperty(JSON_PROPERTY_IN_SCYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInScycle(INScycle inScycle) {
    this.inScycle = inScycle;
  }

  public Identifier matINS(MatINS matINS) {

    this.matINS = matINS;
    return this;
  }

  /**
   * Get matINS
   * @return matINS
   **/
  @JsonProperty(JSON_PROPERTY_MAT_I_N_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MatINS getMatINS() {
    return matINS;
  }

  @JsonProperty(JSON_PROPERTY_MAT_I_N_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatINS(MatINS matINS) {
    this.matINS = matINS;
  }

  public Identifier strictINStraits(StrictINStraits strictINStraits) {

    this.strictINStraits = strictINStraits;
    return this;
  }

  /**
   * Get strictINStraits
   * @return strictINStraits
   **/
  @JsonProperty(JSON_PROPERTY_STRICT_I_N_STRAITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StrictINStraits getStrictINStraits() {
    return strictINStraits;
  }

  @JsonProperty(JSON_PROPERTY_STRICT_I_N_STRAITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStrictINStraits(StrictINStraits strictINStraits) {
    this.strictINStraits = strictINStraits;
  }

  public Identifier nonstrictINStraits(NonstrictINStraits nonstrictINStraits) {

    this.nonstrictINStraits = nonstrictINStraits;
    return this;
  }

  /**
   * Get nonstrictINStraits
   * @return nonstrictINStraits
   **/
  @JsonProperty(JSON_PROPERTY_NONSTRICT_I_N_STRAITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NonstrictINStraits getNonstrictINStraits() {
    return nonstrictINStraits;
  }

  @JsonProperty(JSON_PROPERTY_NONSTRICT_I_N_STRAITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonstrictINStraits(NonstrictINStraits nonstrictINStraits) {
    this.nonstrictINStraits = nonstrictINStraits;
  }

  public Identifier patientContact(List<Contact> patientContact) {

    this.patientContact = patientContact;
    return this;
  }

  public Identifier addPatientContactItem(Contact patientContactItem) {
    if (this.patientContact == null) {
      this.patientContact = new ArrayList<>();
    }
    this.patientContact.add(patientContactItem);
    return this;
  }

  /**
   * Get patientContact
   * @return patientContact
   **/
  @JsonProperty(JSON_PROPERTY_PATIENT_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Contact> getPatientContact() {
    return patientContact;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_PATIENT_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientContact(List<Contact> patientContact) {
    if (patientContact == null) {
      return;
    }
    if (this.patientContact == null) {
      this.patientContact = new ArrayList<>();
    }
    this.patientContact.addAll(patientContact);
  }

  public Identifier patientAddress(PersonalAddress patientAddress) {

    this.patientAddress = patientAddress;
    return this;
  }

  /**
   * Get patientAddress
   * @return patientAddress
   **/
  @JsonProperty(JSON_PROPERTY_PATIENT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PersonalAddress getPatientAddress() {
    return patientAddress;
  }

  @JsonProperty(JSON_PROPERTY_PATIENT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientAddress(PersonalAddress patientAddress) {
    this.patientAddress = patientAddress;
  }

  public Identifier personalGP(PersonalGP personalGP) {

    this.personalGP = personalGP;
    return this;
  }

  /**
   * Get personalGP
   * @return personalGP
   **/
  @JsonProperty(JSON_PROPERTY_PERSONAL_G_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PersonalGP getPersonalGP() {
    return personalGP;
  }

  @JsonProperty(JSON_PROPERTY_PERSONAL_G_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalGP(PersonalGP personalGP) {
    this.personalGP = personalGP;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Identifier identifier = (Identifier)o;
    return Objects.equals(this.patientID, identifier.patientID) &&
        Objects.equals(this.inScycle, identifier.inScycle) &&
        Objects.equals(this.matINS, identifier.matINS) &&
        Objects.equals(this.strictINStraits, identifier.strictINStraits) &&
        Objects.equals(this.nonstrictINStraits,
                       identifier.nonstrictINStraits) &&
        Objects.equals(this.patientContact, identifier.patientContact) &&
        Objects.equals(this.patientAddress, identifier.patientAddress) &&
        Objects.equals(this.personalGP, identifier.personalGP);
  }

  @Override
  public int hashCode() {
    return Objects.hash(patientID, inScycle, matINS, strictINStraits,
                        nonstrictINStraits, patientContact, patientAddress,
                        personalGP);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Identifier {\n");
    sb.append("    patientID: ")
        .append(toIndentedString(patientID))
        .append("\n");
    sb.append("    inScycle: ").append(toIndentedString(inScycle)).append("\n");
    sb.append("    matINS: ").append(toIndentedString(matINS)).append("\n");
    sb.append("    strictINStraits: ")
        .append(toIndentedString(strictINStraits))
        .append("\n");
    sb.append("    nonstrictINStraits: ")
        .append(toIndentedString(nonstrictINStraits))
        .append("\n");
    sb.append("    patientContact: ")
        .append(toIndentedString(patientContact))
        .append("\n");
    sb.append("    patientAddress: ")
        .append(toIndentedString(patientAddress))
        .append("\n");
    sb.append("    personalGP: ")
        .append(toIndentedString(personalGP))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
