/**
 * Copyright Â© 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.emsi;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * Rtype
 */
@JsonPropertyOrder({Rtype.JSON_PROPERTY_R_C_L_A_S_S,
                    Rtype.JSON_PROPERTY_C_A_P_A_B_I_L_I_T_Y,
                    Rtype.JSON_PROPERTY_C_H_A_R_A_C_T_E_R_I_S_T_I_C_S})
@JsonTypeName("rtype")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Rtype {
  public static final String JSON_PROPERTY_R_C_L_A_S_S = "RCLASS";
  private List<String> RCLASS = new ArrayList<>();

  public static final String JSON_PROPERTY_C_A_P_A_B_I_L_I_T_Y = "CAPABILITY";
  private List<String> CAPABILITY;

  public static final String JSON_PROPERTY_C_H_A_R_A_C_T_E_R_I_S_T_I_C_S =
      "CHARACTERISTICS";
  private List<String> CHARACTERISTICS;

  public Rtype() {}

  public Rtype RCLASS(List<String> RCLASS) {

    this.RCLASS = RCLASS;
    return this;
  }

  public Rtype addRCLASSItem(String RCLASSItem) {
    if (this.RCLASS == null) {
      this.RCLASS = new ArrayList<>();
    }
    this.RCLASS.add(RCLASSItem);
    return this;
  }

  /**
   * Get RCLASS
   * @return RCLASS
   **/
  @JsonProperty(JSON_PROPERTY_R_C_L_A_S_S)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getRCLASS() {
    return RCLASS;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_R_C_L_A_S_S)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRCLASS(List<String> RCLASS) {
    if (RCLASS == null) {
      return;
    }
    if (this.RCLASS == null) {
      this.RCLASS = new ArrayList<>();
    }
    this.RCLASS.addAll(RCLASS);
  }

  public Rtype CAPABILITY(List<String> CAPABILITY) {

    this.CAPABILITY = CAPABILITY;
    return this;
  }

  public Rtype addCAPABILITYItem(String CAPABILITYItem) {
    if (this.CAPABILITY == null) {
      this.CAPABILITY = new ArrayList<>();
    }
    this.CAPABILITY.add(CAPABILITYItem);
    return this;
  }

  /**
   * Get CAPABILITY
   * @return CAPABILITY
   **/
  @JsonProperty(JSON_PROPERTY_C_A_P_A_B_I_L_I_T_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCAPABILITY() {
    return CAPABILITY;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_C_A_P_A_B_I_L_I_T_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCAPABILITY(List<String> CAPABILITY) {
    if (CAPABILITY == null) {
      return;
    }
    if (this.CAPABILITY == null) {
      this.CAPABILITY = new ArrayList<>();
    }
    this.CAPABILITY.addAll(CAPABILITY);
  }

  public Rtype CHARACTERISTICS(List<String> CHARACTERISTICS) {

    this.CHARACTERISTICS = CHARACTERISTICS;
    return this;
  }

  public Rtype addCHARACTERISTICSItem(String CHARACTERISTICSItem) {
    if (this.CHARACTERISTICS == null) {
      this.CHARACTERISTICS = new ArrayList<>();
    }
    this.CHARACTERISTICS.add(CHARACTERISTICSItem);
    return this;
  }

  /**
   * Get CHARACTERISTICS
   * @return CHARACTERISTICS
   **/
  @JsonProperty(JSON_PROPERTY_C_H_A_R_A_C_T_E_R_I_S_T_I_C_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCHARACTERISTICS() {
    return CHARACTERISTICS;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_C_H_A_R_A_C_T_E_R_I_S_T_I_C_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCHARACTERISTICS(List<String> CHARACTERISTICS) {
    if (CHARACTERISTICS == null) {
      return;
    }
    if (this.CHARACTERISTICS == null) {
      this.CHARACTERISTICS = new ArrayList<>();
    }
    this.CHARACTERISTICS.addAll(CHARACTERISTICS);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rtype rtype = (Rtype)o;
    return Objects.equals(this.RCLASS, rtype.RCLASS) &&
        Objects.equals(this.CAPABILITY, rtype.CAPABILITY) &&
        Objects.equals(this.CHARACTERISTICS, rtype.CHARACTERISTICS);
  }

  @Override
  public int hashCode() {
    return Objects.hash(RCLASS, CAPABILITY, CHARACTERISTICS);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rtype {\n");
    sb.append("    RCLASS: ").append(toIndentedString(RCLASS)).append("\n");
    sb.append("    CAPABILITY: ")
        .append(toIndentedString(CAPABILITY))
        .append("\n");
    sb.append("    CHARACTERISTICS: ")
        .append(toIndentedString(CHARACTERISTICS))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
