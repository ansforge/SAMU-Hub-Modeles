/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.emsi;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.emsi.Position;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * Egeo
 */
@JsonPropertyOrder({Egeo.JSON_PROPERTY_D_A_T_I_M_E, Egeo.JSON_PROPERTY_T_Y_P_E,
                    Egeo.JSON_PROPERTY_W_E_A_T_H_E_R,
                    Egeo.JSON_PROPERTY_F_R_E_E_T_E_X_T,
                    Egeo.JSON_PROPERTY_P_O_S_I_T_I_O_N})
@JsonTypeName("egeo")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Egeo {
  public static final String JSON_PROPERTY_D_A_T_I_M_E = "DATIME";
  private OffsetDateTime DATIME;

  public static final String JSON_PROPERTY_T_Y_P_E = "TYPE";
  private String TYPE;

  public static final String JSON_PROPERTY_W_E_A_T_H_E_R = "WEATHER";
  private List<String> WEATHER;

  public static final String JSON_PROPERTY_F_R_E_E_T_E_X_T = "FREETEXT";
  private String FREETEXT;

  public static final String JSON_PROPERTY_P_O_S_I_T_I_O_N = "POSITION";
  private Position POSITION;

  public Egeo() {}

  public Egeo DATIME(OffsetDateTime DATIME) {

    this.DATIME = DATIME;
    return this;
  }

  /**
   * Optionnel La localisation de l&#39;affaire est transmise en amont dans un
   *message RC-EDA et le lieu souhaité pour l&#39;intervention est
   *systématiquement reprécisé dans un objet MISSION
   * @return DATIME
   **/
  @JsonProperty(JSON_PROPERTY_D_A_T_I_M_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDATIME() {
    return DATIME;
  }

  @JsonProperty(JSON_PROPERTY_D_A_T_I_M_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDATIME(OffsetDateTime DATIME) {
    this.DATIME = DATIME;
  }

  public Egeo TYPE(String TYPE) {

    this.TYPE = TYPE;
    return this;
  }

  /**
   * Optionnel La localisation de l&#39;affaire est transmise en amont dans un
   *message RC-EDA et le lieu souhaité pour l&#39;intervention est
   *systématiquement reprécisé dans un objet MISSION
   * @return TYPE
   **/
  @JsonProperty(JSON_PROPERTY_T_Y_P_E)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTYPE() {
    return TYPE;
  }

  @JsonProperty(JSON_PROPERTY_T_Y_P_E)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTYPE(String TYPE) {
    this.TYPE = TYPE;
  }

  public Egeo WEATHER(List<String> WEATHER) {

    this.WEATHER = WEATHER;
    return this;
  }

  public Egeo addWEATHERItem(String WEATHERItem) {
    if (this.WEATHER == null) {
      this.WEATHER = new ArrayList<>();
    }
    this.WEATHER.add(WEATHERItem);
    return this;
  }

  /**
   * Get WEATHER
   * @return WEATHER
   **/
  @JsonProperty(JSON_PROPERTY_W_E_A_T_H_E_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWEATHER() {
    return WEATHER;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_W_E_A_T_H_E_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWEATHER(List<String> WEATHER) {
    if (WEATHER == null) {
      return;
    }
    if (this.WEATHER == null) {
      this.WEATHER = new ArrayList<>();
    }
    this.WEATHER.addAll(WEATHER);
  }

  public Egeo FREETEXT(String FREETEXT) {

    this.FREETEXT = FREETEXT;
    return this;
  }

  /**
   * Optionnel La localisation de l&#39;affaire est transmise en amont dans un
   *message RC-EDA et le lieu souhaité pour l&#39;intervention est
   *systématiquement reprécisé dans un objet MISSION
   * @return FREETEXT
   **/
  @JsonProperty(JSON_PROPERTY_F_R_E_E_T_E_X_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFREETEXT() {
    return FREETEXT;
  }

  @JsonProperty(JSON_PROPERTY_F_R_E_E_T_E_X_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFREETEXT(String FREETEXT) {
    this.FREETEXT = FREETEXT;
  }

  public Egeo POSITION(Position POSITION) {

    this.POSITION = POSITION;
    return this;
  }

  /**
   * Get POSITION
   * @return POSITION
   **/
  @JsonProperty(JSON_PROPERTY_P_O_S_I_T_I_O_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Position getPOSITION() {
    return POSITION;
  }

  @JsonProperty(JSON_PROPERTY_P_O_S_I_T_I_O_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPOSITION(Position POSITION) {
    this.POSITION = POSITION;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Egeo egeo = (Egeo)o;
    return Objects.equals(this.DATIME, egeo.DATIME) &&
        Objects.equals(this.TYPE, egeo.TYPE) &&
        Objects.equals(this.WEATHER, egeo.WEATHER) &&
        Objects.equals(this.FREETEXT, egeo.FREETEXT) &&
        Objects.equals(this.POSITION, egeo.POSITION);
  }

  @Override
  public int hashCode() {
    return Objects.hash(DATIME, TYPE, WEATHER, FREETEXT, POSITION);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Egeo {\n");
    sb.append("    DATIME: ").append(toIndentedString(DATIME)).append("\n");
    sb.append("    TYPE: ").append(toIndentedString(TYPE)).append("\n");
    sb.append("    WEATHER: ").append(toIndentedString(WEATHER)).append("\n");
    sb.append("    FREETEXT: ").append(toIndentedString(FREETEXT)).append("\n");
    sb.append("    POSITION: ").append(toIndentedString(POSITION)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
