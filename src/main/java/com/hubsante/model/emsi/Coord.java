/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hubsante.model.emsi;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.math.BigDecimal;

import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Coord
 */
@JsonPropertyOrder({
        Coord.JSON_PROPERTY_L_A_T,
        Coord.JSON_PROPERTY_L_O_N_G,
        Coord.JSON_PROPERTY_H_E_I_G_H_T
})
@JsonTypeName("coord")
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-08T11:29:35.594+01:00[Europe/Paris]")
public class Coord {
    public static final String JSON_PROPERTY_L_A_T = "LAT";
    private BigDecimal LAT;

    public static final String JSON_PROPERTY_L_O_N_G = "LONG";
    private BigDecimal LONG;

    public static final String JSON_PROPERTY_H_E_I_G_H_T = "HEIGHT";
    private BigDecimal HEIGHT;

    public Coord() {
    }

    public Coord LAT(BigDecimal LAT) {

        this.LAT = LAT;
        return this;
    }

    /**
     * Dans le cas où aucun LOC_ID n&#39;est transféré, permet de localiser le lieu d&#39;intervention souhaité
     *
     * @return LAT
     **/
    @JsonProperty(JSON_PROPERTY_L_A_T)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getLAT() {
        return LAT;
    }


    @JsonProperty(JSON_PROPERTY_L_A_T)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLAT(BigDecimal LAT) {
        this.LAT = LAT;
    }


    public Coord LONG(BigDecimal LONG) {

        this.LONG = LONG;
        return this;
    }

    /**
     * Dans le cas où aucun LOC_ID n&#39;est transféré, permet de localiser le lieu d&#39;intervention souhaité
     *
     * @return LONG
     **/
    @JsonProperty(JSON_PROPERTY_L_O_N_G)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getLONG() {
        return LONG;
    }


    @JsonProperty(JSON_PROPERTY_L_O_N_G)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLONG(BigDecimal LONG) {
        this.LONG = LONG;
    }


    public Coord HEIGHT(BigDecimal HEIGHT) {

        this.HEIGHT = HEIGHT;
        return this;
    }

    /**
     * Dans le cas où aucun LOC_ID n&#39;est transféré, permet de localiser le lieu d&#39;intervention souhaité
     *
     * @return HEIGHT
     **/
    @JsonProperty(JSON_PROPERTY_H_E_I_G_H_T)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getHEIGHT() {
        return HEIGHT;
    }


    @JsonProperty(JSON_PROPERTY_H_E_I_G_H_T)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHEIGHT(BigDecimal HEIGHT) {
        this.HEIGHT = HEIGHT;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Coord coord = (Coord) o;
        return Objects.equals(this.LAT, coord.LAT) &&
                Objects.equals(this.LONG, coord.LONG) &&
                Objects.equals(this.HEIGHT, coord.HEIGHT);
    }

    @Override
    public int hashCode() {
        return Objects.hash(LAT
                , LONG
                , HEIGHT);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Coord {\n");
        sb.append("    LAT: ").append(toIndentedString(LAT)).append("\n");
        sb.append("    LONG: ").append(toIndentedString(LONG)).append("\n");
        sb.append("    HEIGHT: ").append(toIndentedString(HEIGHT)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
