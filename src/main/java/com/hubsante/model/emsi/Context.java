/**
 * Copyright © 2023 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hubsante.model.emsi;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hubsante.model.emsi.Link;
import com.hubsante.model.emsi.Origin;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Context
 */
@JsonPropertyOrder({
        Context.JSON_PROPERTY_I_D,
        Context.JSON_PROPERTY_M_O_D_E,
        Context.JSON_PROPERTY_M_S_G_T_Y_P_E,
        Context.JSON_PROPERTY_C_R_E_A_T_I_O_N,
        Context.JSON_PROPERTY_L_I_N_K,
        Context.JSON_PROPERTY_L_E_V_E_L,
        Context.JSON_PROPERTY_S_E_C_L_A_S_S,
        Context.JSON_PROPERTY_F_R_E_E_T_E_X_T,
        Context.JSON_PROPERTY_O_R_I_G_I_N,
        Context.JSON_PROPERTY_E_X_T_E_R_N_A_L_I_N_F_O
})
@JsonTypeName("context")
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-08T11:29:35.594+01:00[Europe/Paris]")
public class Context {
    public static final String JSON_PROPERTY_I_D = "ID";
    private String ID;

    /**
     * Valeur constante dans le cadre des échanges LRM-NexSIS : ACTUAL
     */
    public enum MODEEnum {
        ACTUAL("ACTUAL"),

        EXERCS("EXERCS"),

        SYSTEM("SYSTEM"),

        TEST("TEST");

        private String value;

        MODEEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static MODEEnum fromValue(String value) {
            for (MODEEnum b : MODEEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_M_O_D_E = "MODE";
    private MODEEnum MODE;

    /**
     * Valeur constante dans le cadre d&#39;une demande de concours pour des échanges LRM-NexSIS : UPDATE
     */
    public enum MSGTYPEEnum {
        ACK("ACK"),

        ALERT("ALERT"),

        CANCEL("CANCEL"),

        ERROR("ERROR"),

        UPDATE("UPDATE");

        private String value;

        MSGTYPEEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static MSGTYPEEnum fromValue(String value) {
            for (MSGTYPEEnum b : MSGTYPEEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_M_S_G_T_Y_P_E = "MSGTYPE";
    private MSGTYPEEnum MSGTYPE;

    public static final String JSON_PROPERTY_C_R_E_A_T_I_O_N = "CREATION";
    private OffsetDateTime CREATION;

    public static final String JSON_PROPERTY_L_I_N_K = "LINK";
    private List<Link> LINK;

    /**
     * Dans le cadre d&#39;une demande de concours, optionnel
     */
    public enum LEVELEnum {
        STRTGC("STRTGC"),

        OPR("OPR"),

        TACTCL("TACTCL");

        private String value;

        LEVELEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static LEVELEnum fromValue(String value) {
            for (LEVELEnum b : LEVELEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_L_E_V_E_L = "LEVEL";
    private LEVELEnum LEVEL;

    /**
     * Dans le cadre d&#39;une demande de concours, optionnel
     */
    public enum SECLASSEnum {
        CONFID("CONFID"),

        RESTRC("RESTRC"),

        SECRET("SECRET"),

        TOPSRT("TOPSRT"),

        UNCLAS("UNCLAS"),

        UNMARK("UNMARK");

        private String value;

        SECLASSEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static SECLASSEnum fromValue(String value) {
            for (SECLASSEnum b : SECLASSEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_S_E_C_L_A_S_S = "SECLASS";
    private SECLASSEnum SECLASS;

    public static final String JSON_PROPERTY_F_R_E_E_T_E_X_T = "FREETEXT";
    private String FREETEXT;

    public static final String JSON_PROPERTY_O_R_I_G_I_N = "ORIGIN";
    private Origin ORIGIN;

    public static final String JSON_PROPERTY_E_X_T_E_R_N_A_L_I_N_F_O = "EXTERNAL_INFO";
    private List<Object> EXTERNAL_INFO;

    public Context() {
    }

    public Context ID(String ID) {

        this.ID = ID;
        return this;
    }

    /**
     * A constituer par le rédacteur du présent EMSI pour être unique, peut reprendre messageId de l&#39;en tête RC-DE.
     *
     * @return ID
     **/
    @JsonProperty(JSON_PROPERTY_I_D)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getID() {
        return ID;
    }


    @JsonProperty(JSON_PROPERTY_I_D)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setID(String ID) {
        this.ID = ID;
    }


    public Context MODE(MODEEnum MODE) {

        this.MODE = MODE;
        return this;
    }

    /**
     * Valeur constante dans le cadre des échanges LRM-NexSIS : ACTUAL
     *
     * @return MODE
     **/
    @JsonProperty(JSON_PROPERTY_M_O_D_E)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public MODEEnum getMODE() {
        return MODE;
    }


    @JsonProperty(JSON_PROPERTY_M_O_D_E)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMODE(MODEEnum MODE) {
        this.MODE = MODE;
    }


    public Context MSGTYPE(MSGTYPEEnum MSGTYPE) {

        this.MSGTYPE = MSGTYPE;
        return this;
    }

    /**
     * Valeur constante dans le cadre d&#39;une demande de concours pour des échanges LRM-NexSIS : UPDATE
     *
     * @return MSGTYPE
     **/
    @JsonProperty(JSON_PROPERTY_M_S_G_T_Y_P_E)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public MSGTYPEEnum getMSGTYPE() {
        return MSGTYPE;
    }


    @JsonProperty(JSON_PROPERTY_M_S_G_T_Y_P_E)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMSGTYPE(MSGTYPEEnum MSGTYPE) {
        this.MSGTYPE = MSGTYPE;
    }


    public Context CREATION(OffsetDateTime CREATION) {

        this.CREATION = CREATION;
        return this;
    }

    /**
     * Obligatoire dans le cadre d&#39;une demande de concours, contient la date de création de la demande de concours dans le système du partenaire requérant
     *
     * @return CREATION
     **/
    @JsonProperty(JSON_PROPERTY_C_R_E_A_T_I_O_N)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public OffsetDateTime getCREATION() {
        return CREATION;
    }


    @JsonProperty(JSON_PROPERTY_C_R_E_A_T_I_O_N)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCREATION(OffsetDateTime CREATION) {
        this.CREATION = CREATION;
    }


    public Context LINK(List<Link> LINK) {

        this.LINK = LINK;
        return this;
    }

    public Context addLINKItem(Link LINKItem) {
        if (this.LINK == null) {
            this.LINK = new ArrayList<>();
        }
        this.LINK.add(LINKItem);
        return this;
    }

    /**
     * Get LINK
     *
     * @return LINK
     **/
    @JsonProperty(JSON_PROPERTY_L_I_N_K)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Link> getLINK() {
        return LINK;
    }

    @JacksonXmlElementWrapper(useWrapping = false)

    @JsonProperty(JSON_PROPERTY_L_I_N_K)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLINK(List<Link> LINK) {
        if (LINK == null) {
            return;
        }
        if (this.LINK == null) {
            this.LINK = new ArrayList<>();
        }
        this.LINK.addAll(LINK);
    }


    public Context LEVEL(LEVELEnum LEVEL) {

        this.LEVEL = LEVEL;
        return this;
    }

    /**
     * Dans le cadre d&#39;une demande de concours, optionnel
     *
     * @return LEVEL
     **/
    @JsonProperty(JSON_PROPERTY_L_E_V_E_L)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LEVELEnum getLEVEL() {
        return LEVEL;
    }


    @JsonProperty(JSON_PROPERTY_L_E_V_E_L)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLEVEL(LEVELEnum LEVEL) {
        this.LEVEL = LEVEL;
    }


    public Context SECLASS(SECLASSEnum SECLASS) {

        this.SECLASS = SECLASS;
        return this;
    }

    /**
     * Dans le cadre d&#39;une demande de concours, optionnel
     *
     * @return SECLASS
     **/
    @JsonProperty(JSON_PROPERTY_S_E_C_L_A_S_S)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SECLASSEnum getSECLASS() {
        return SECLASS;
    }


    @JsonProperty(JSON_PROPERTY_S_E_C_L_A_S_S)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSECLASS(SECLASSEnum SECLASS) {
        this.SECLASS = SECLASS;
    }


    public Context FREETEXT(String FREETEXT) {

        this.FREETEXT = FREETEXT;
        return this;
    }

    /**
     * Texte libre Dans le cadre d&#39;une demande de concours, optionnel
     *
     * @return FREETEXT
     **/
    @JsonProperty(JSON_PROPERTY_F_R_E_E_T_E_X_T)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFREETEXT() {
        return FREETEXT;
    }


    @JsonProperty(JSON_PROPERTY_F_R_E_E_T_E_X_T)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFREETEXT(String FREETEXT) {
        this.FREETEXT = FREETEXT;
    }


    public Context ORIGIN(Origin ORIGIN) {

        this.ORIGIN = ORIGIN;
        return this;
    }

    /**
     * Get ORIGIN
     *
     * @return ORIGIN
     **/
    @JsonProperty(JSON_PROPERTY_O_R_I_G_I_N)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Origin getORIGIN() {
        return ORIGIN;
    }


    @JsonProperty(JSON_PROPERTY_O_R_I_G_I_N)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setORIGIN(Origin ORIGIN) {
        this.ORIGIN = ORIGIN;
    }


    public Context EXTERNAL_INFO(List<Object> EXTERNAL_INFO) {

        this.EXTERNAL_INFO = EXTERNAL_INFO;
        return this;
    }

    public Context addEXTERNALINFOItem(Object EXTERNAL_INFOItem) {
        if (this.EXTERNAL_INFO == null) {
            this.EXTERNAL_INFO = new ArrayList<>();
        }
        this.EXTERNAL_INFO.add(EXTERNAL_INFOItem);
        return this;
    }

    /**
     * Get EXTERNAL_INFO
     *
     * @return EXTERNAL_INFO
     **/
    @JsonProperty(JSON_PROPERTY_E_X_T_E_R_N_A_L_I_N_F_O)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Object> getEXTERNALINFO() {
        return EXTERNAL_INFO;
    }

    @JacksonXmlElementWrapper(useWrapping = false)

    @JsonProperty(JSON_PROPERTY_E_X_T_E_R_N_A_L_I_N_F_O)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEXTERNALINFO(List<Object> EXTERNAL_INFO) {
        if (EXTERNAL_INFO == null) {
            return;
        }
        if (this.EXTERNAL_INFO == null) {
            this.EXTERNAL_INFO = new ArrayList<>();
        }
        this.EXTERNAL_INFO.addAll(EXTERNAL_INFO);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Context context = (Context) o;
        return Objects.equals(this.ID, context.ID) &&
                Objects.equals(this.MODE, context.MODE) &&
                Objects.equals(this.MSGTYPE, context.MSGTYPE) &&
                Objects.equals(this.CREATION, context.CREATION) &&
                Objects.equals(this.LINK, context.LINK) &&
                Objects.equals(this.LEVEL, context.LEVEL) &&
                Objects.equals(this.SECLASS, context.SECLASS) &&
                Objects.equals(this.FREETEXT, context.FREETEXT) &&
                Objects.equals(this.ORIGIN, context.ORIGIN) &&
                Objects.equals(this.EXTERNAL_INFO, context.EXTERNAL_INFO);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ID
                , MODE
                , MSGTYPE
                , CREATION
                , LINK
                , LEVEL
                , SECLASS
                , FREETEXT
                , ORIGIN
                , EXTERNAL_INFO);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Context {\n");
        sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
        sb.append("    MODE: ").append(toIndentedString(MODE)).append("\n");
        sb.append("    MSGTYPE: ").append(toIndentedString(MSGTYPE)).append("\n");
        sb.append("    CREATION: ").append(toIndentedString(CREATION)).append("\n");
        sb.append("    LINK: ").append(toIndentedString(LINK)).append("\n");
        sb.append("    LEVEL: ").append(toIndentedString(LEVEL)).append("\n");
        sb.append("    SECLASS: ").append(toIndentedString(SECLASS)).append("\n");
        sb.append("    FREETEXT: ").append(toIndentedString(FREETEXT)).append("\n");
        sb.append("    ORIGIN: ").append(toIndentedString(ORIGIN)).append("\n");
        sb.append("    EXTERNAL_INFO: ").append(toIndentedString(EXTERNAL_INFO)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
