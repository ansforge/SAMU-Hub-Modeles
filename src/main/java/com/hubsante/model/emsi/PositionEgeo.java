/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hubsante.model.emsi;

import java.util.Objects;
import java.util.Arrays;
    import com.fasterxml.jackson.annotation.JsonInclude;
    import com.fasterxml.jackson.annotation.JsonProperty;
    import com.fasterxml.jackson.annotation.JsonCreator;
    import com.fasterxml.jackson.annotation.JsonTypeName;
    import com.fasterxml.jackson.annotation.JsonValue;
    import java.math.BigDecimal;
    import java.util.ArrayList;
    import java.util.List;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
    import com.fasterxml.jackson.annotation.JsonPropertyOrder;
    import com.fasterxml.jackson.annotation.JsonTypeName;

        /**
* PositionEgeo
*/
    @JsonPropertyOrder({
        PositionEgeo.JSON_PROPERTY_L_O_C_I_D,
        PositionEgeo.JSON_PROPERTY_T_Y_P_E,
        PositionEgeo.JSON_PROPERTY_L_A_T,
        PositionEgeo.JSON_PROPERTY_L_O_N_G,
        PositionEgeo.JSON_PROPERTY_H_E_I_G_H_T,
        PositionEgeo.JSON_PROPERTY_A_D_R_E_S_S_E
    })
            @JsonTypeName("positionEgeo")
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-07T12:10:46.052+01:00[Europe/Paris]")
public class PositionEgeo {
        public static final String JSON_PROPERTY_L_O_C_I_D = "LOC_ID";
            private String LOC_ID;

              /**
   * Dans le cadre d&#39;une demande de concours, optionnel. Le champ peut ne pas être émis ni interprété. La localisation de l&#39;affaire est transmise en amont dans un message RC-EDA et le lieu souhaité pour l&#39;intervention est systématiquement reprécisé dans un objet MISSION
   */
  public enum TYPEEnum {
    AIR("AIR"),
    
    CMB("CMB"),
    
    DGR("DGR"),
    
    FLAME("FLAME"),
    
    GEN("GEN"),
    
    PLUME("PLUME"),
    
    SMOKE("SMOKE"),
    
    VULN("VULN"),
    
    _AIR_COR("/AIR/COR"),
    
    _AIR_FLDZ("/AIR/FLDZ"),
    
    _AIR_LZ("/AIR/LZ"),
    
    _AIR_NOFLZN("/AIR/NOFLZN"),
    
    _AIR_PZ("/AIR/PZ"),
    
    _AIR_UAVASP("/AIR/UAVASP"),
    
    _CMB_CZ("/CMB/CZ"),
    
    _CMB_DNGR("/CMB/DNGR"),
    
    _CMB_EXTZN("/CMB/EXTZN"),
    
    _CMB_IMPTPT("/CMB/IMPTPT"),
    
    _DGR_BIO("/DGR/BIO"),
    
    _DGR_BOMB("/DGR/BOMB"),
    
    _DGR_CBRNHZ("/DGR/CBRNHZ"),
    
    _DGR_CBRNRSD("/DGR/CBRNRSD"),
    
    _DGR_CHM("/DGR/CHM"),
    
    _DGR_HZD("/DGR/HZD"),
    
    _DGR_MIND("/DGR/MIND"),
    
    _DGR_NGA("/DGR/NGA"),
    
    _DGR_NGACIV("/DGR/NGACIV"),
    
    _DGR_NUKCNL("/DGR/NUKCNL"),
    
    _DGR_OBSGEN("/DGR/OBSGEN"),
    
    _DGR_PRHBAR("/DGR/PRHBAR"),
    
    _DGR_RAD("/DGR/RAD"),
    
    _DGR_RADCLD("/DGR/RADCLD"),
    
    _DGR_RSTR("/DGR/RSTR"),
    
    _DGR_SGA("/DGR/SGA"),
    
    _DGR_SITKIL("/DGR/SITKIL"),
    
    _DGR_UNXOD("/DGR/UNXOD"),
    
    _GEN_AOR("/GEN/AOR"),
    
    _GEN_ASYGEN("/GEN/ASYGEN"),
    
    _GEN_ASYSPL("/GEN/ASYSPL"),
    
    _GEN_BDYOR("/GEN/BDYOR"),
    
    _GEN_BDYPOA("/GEN/BDYPOA"),
    
    _GEN_BDYPT("/GEN/BDYPT"),
    
    _GEN_CKPGEN("/GEN/CKPGEN"),
    
    _GEN_CNTPTL("/GEN/CNTPTL"),
    
    _GEN_COLDZ("/GEN/COLDZ"),
    
    _GEN_COMCKP("/GEN/COMCKP"),
    
    _GEN_COMLOW("/GEN/COMLOW"),
    
    _GEN_COMMZ("/GEN/COMMZ"),
    
    _GEN_COMUP("/GEN/COMUP"),
    
    _GEN_CONTAR("/GEN/CONTAR"),
    
    _GEN_CORDON("/GEN/CORDON"),
    
    _GEN_CRDPNT("/GEN/CRDPNT"),
    
    _GEN_DIVRT("/GEN/DIVRT"),
    
    _GEN_DROPPT("/GEN/DROPPT"),
    
    _GEN_ENTPT("/GEN/ENTPT"),
    
    _GEN_EVENT("/GEN/EVENT"),
    
    _GEN_EXITPT("/GEN/EXITPT"),
    
    _GEN_FWCTPT("/GEN/FWCTPT"),
    
    _GEN_HOTZ("/GEN/HOTZ"),
    
    _GEN_INCGRD("/GEN/INCGRD"),
    
    _GEN_LA("/GEN/LA"),
    
    _GEN_LIMARE("/GEN/LIMARE"),
    
    _GEN_LOCAT("/GEN/LOCAT"),
    
    _GEN_MSR("/GEN/MSR"),
    
    _GEN_PSSGPT("/GEN/PSSGPT"),
    
    _GEN_PTINT("/GEN/PTINT"),
    
    _GEN_RCNSAR("/GEN/RCNSAR"),
    
    _GEN_RNDZPT("/GEN/RNDZPT"),
    
    _GEN_ROUTE("/GEN/ROUTE"),
    
    _GEN_SAFERT("/GEN/SAFERT"),
    
    _GEN_SAFZ("/GEN/SAFZ"),
    
    _GEN_SARPNT("/GEN/SARPNT"),
    
    _GEN_SEARAR("/GEN/SEARAR"),
    
    _GEN_SPRISK("/GEN/SPRISK"),
    
    _GEN_STRTPT("/GEN/STRTPT"),
    
    _GEN_SUPARE("/GEN/SUPARE"),
    
    _GEN_SUPPT("/GEN/SUPPT"),
    
    _GEN_TRSTRT("/GEN/TRSTRT"),
    
    _GEN_WARMZ("/GEN/WARMZ");

    private String value;

    TYPEEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TYPEEnum fromValue(String value) {
      for (TYPEEnum b : TYPEEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

        public static final String JSON_PROPERTY_T_Y_P_E = "TYPE";
            private TYPEEnum TYPE;

        public static final String JSON_PROPERTY_L_A_T = "LAT";
            private BigDecimal LAT;

        public static final String JSON_PROPERTY_L_O_N_G = "LONG";
            private BigDecimal LONG;

        public static final String JSON_PROPERTY_H_E_I_G_H_T = "HEIGHT";
            private BigDecimal HEIGHT;

        public static final String JSON_PROPERTY_A_D_R_E_S_S_E = "ADRESSE";
            private List<String> ADRESSE;

public PositionEgeo() {
}

        public PositionEgeo LOC_ID(String LOC_ID) {
        
        this.LOC_ID = LOC_ID;
        return this;
        }

    /**
        * Dans le cadre d&#39;une demande de concours, optionnel. Le champ peut ne pas être émis ni interprété. La localisation de l&#39;affaire est transmise en amont dans un message RC-EDA et le lieu souhaité pour l&#39;intervention est systématiquement reprécisé dans un objet MISSION
    * @return LOC_ID
    **/
      @JsonProperty(JSON_PROPERTY_L_O_C_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getLOCID() {
        return LOC_ID;
    }


          @JsonProperty(JSON_PROPERTY_L_O_C_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLOCID(String LOC_ID) {
                this.LOC_ID = LOC_ID;
        }


        public PositionEgeo TYPE(TYPEEnum TYPE) {
        
        this.TYPE = TYPE;
        return this;
        }

    /**
        * Dans le cadre d&#39;une demande de concours, optionnel. Le champ peut ne pas être émis ni interprété. La localisation de l&#39;affaire est transmise en amont dans un message RC-EDA et le lieu souhaité pour l&#39;intervention est systématiquement reprécisé dans un objet MISSION
    * @return TYPE
    **/
      @JsonProperty(JSON_PROPERTY_T_Y_P_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TYPEEnum getTYPE() {
        return TYPE;
    }


          @JsonProperty(JSON_PROPERTY_T_Y_P_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTYPE(TYPEEnum TYPE) {
                this.TYPE = TYPE;
        }


        public PositionEgeo LAT(BigDecimal LAT) {
        
        this.LAT = LAT;
        return this;
        }

    /**
        * Dans le cadre d&#39;une demande de concours, optionnel. Le champ peut ne pas être émis ni interprété. La localisation de l&#39;affaire est transmise en amont dans un message RC-EDA et le lieu souhaité pour l&#39;intervention est systématiquement reprécisé dans un objet MISSION
    * @return LAT
    **/
      @JsonProperty(JSON_PROPERTY_L_A_T)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getLAT() {
        return LAT;
    }


          @JsonProperty(JSON_PROPERTY_L_A_T)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLAT(BigDecimal LAT) {
                this.LAT = LAT;
        }


        public PositionEgeo LONG(BigDecimal LONG) {
        
        this.LONG = LONG;
        return this;
        }

    /**
        * Dans le cadre d&#39;une demande de concours, optionnel. Le champ peut ne pas être émis ni interprété. La localisation de l&#39;affaire est transmise en amont dans un message RC-EDA et le lieu souhaité pour l&#39;intervention est systématiquement reprécisé dans un objet MISSION
    * @return LONG
    **/
      @JsonProperty(JSON_PROPERTY_L_O_N_G)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getLONG() {
        return LONG;
    }


          @JsonProperty(JSON_PROPERTY_L_O_N_G)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLONG(BigDecimal LONG) {
                this.LONG = LONG;
        }


        public PositionEgeo HEIGHT(BigDecimal HEIGHT) {
        
        this.HEIGHT = HEIGHT;
        return this;
        }

    /**
        * Dans le cadre d&#39;une demande de concours, optionnel. Le champ peut ne pas être émis ni interprété. La localisation de l&#39;affaire est transmise en amont dans un message RC-EDA et le lieu souhaité pour l&#39;intervention est systématiquement reprécisé dans un objet MISSION
    * @return HEIGHT
    **/
      @JsonProperty(JSON_PROPERTY_H_E_I_G_H_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getHEIGHT() {
        return HEIGHT;
    }


          @JsonProperty(JSON_PROPERTY_H_E_I_G_H_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHEIGHT(BigDecimal HEIGHT) {
                this.HEIGHT = HEIGHT;
        }


        public PositionEgeo ADRESSE(List<String> ADRESSE) {
        
        this.ADRESSE = ADRESSE;
        return this;
        }

            public PositionEgeo addADRESSEItem(String ADRESSEItem) {
                if (this.ADRESSE == null) {
                this.ADRESSE = new ArrayList<>();
                }
                this.ADRESSE.add(ADRESSEItem);
                return this;
            }

    /**
        * Get ADRESSE
    * @return ADRESSE
    **/
      @JsonProperty(JSON_PROPERTY_A_D_R_E_S_S_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getADRESSE() {
        return ADRESSE;
    }

        @JacksonXmlElementWrapper(useWrapping = false)

          @JsonProperty(JSON_PROPERTY_A_D_R_E_S_S_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setADRESSE(List<String> ADRESSE) {
                if (ADRESSE == null) { return; }
                if (this.ADRESSE == null) {
                this.ADRESSE = new ArrayList<>();
                }
                this.ADRESSE.addAll(ADRESSE);
        }

@Override
public boolean equals(Object o) {
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }
        PositionEgeo positionEgeo = (PositionEgeo) o;
        return Objects.equals(this.LOC_ID, positionEgeo.LOC_ID) &&
        Objects.equals(this.TYPE, positionEgeo.TYPE) &&
        Objects.equals(this.LAT, positionEgeo.LAT) &&
        Objects.equals(this.LONG, positionEgeo.LONG) &&
        Objects.equals(this.HEIGHT, positionEgeo.HEIGHT) &&
        Objects.equals(this.ADRESSE, positionEgeo.ADRESSE);
}

    @Override
    public int hashCode() {
        return Objects.hash(LOC_ID
            , TYPE
            , LAT
            , LONG
            , HEIGHT
            , ADRESSE);
    }

    @Override
    public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PositionEgeo {\n");
        sb.append("    LOC_ID: ").append(toIndentedString(LOC_ID)).append("\n");
        sb.append("    TYPE: ").append(toIndentedString(TYPE)).append("\n");
        sb.append("    LAT: ").append(toIndentedString(LAT)).append("\n");
        sb.append("    LONG: ").append(toIndentedString(LONG)).append("\n");
        sb.append("    HEIGHT: ").append(toIndentedString(HEIGHT)).append("\n");
        sb.append("    ADRESSE: ").append(toIndentedString(ADRESSE)).append("\n");
    sb.append("}");
    return sb.toString();
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
    if (o == null) {
    return "null";
    }
    return o.toString().replace("\n", "\n    ");
    }

    }
