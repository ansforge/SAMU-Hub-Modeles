/**
 * Copyright © 2023-2024 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.rpis;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.util.Arrays;
import java.util.Arrays;
import java.util.Objects;

/**
 * Destination
 */
@JsonPropertyOrder({Destination.JSON_PROPERTY_DESTINATION_COUNTRY,
                    Destination.JSON_PROPERTY_DESTINATION_CATEGORY,
                    Destination.JSON_PROPERTY_HEALTHCARE_TYPE,
                    Destination.JSON_PROPERTY_FINESS})
@JsonTypeName("destination")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Destination {
  public static final String JSON_PROPERTY_DESTINATION_COUNTRY =
      "destinationCountry";
  private String destinationCountry;

  public static final String JSON_PROPERTY_DESTINATION_CATEGORY =
      "destinationCategory";
  private String destinationCategory;

  public static final String JSON_PROPERTY_HEALTHCARE_TYPE = "healthcareType";
  private String healthcareType;

  public static final String JSON_PROPERTY_FINESS = "finess";
  private String finess;

  public Destination() {}

  public Destination destinationCountry(String destinationCountry) {

    this.destinationCountry = destinationCountry;
    return this;
  }

  /**
   * A valoriser par le libellé court de la nomenclature SIGLPAYS
   * @return destinationCountry
   **/
  @JsonProperty(JSON_PROPERTY_DESTINATION_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDestinationCountry() {
    return destinationCountry;
  }

  @JsonProperty(JSON_PROPERTY_DESTINATION_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestinationCountry(String destinationCountry) {
    this.destinationCountry = destinationCountry;
  }

  public Destination destinationCategory(String destinationCategory) {

    this.destinationCategory = destinationCategory;
    return this;
  }

  /**
   * A valoriser par le code de la nomenclature associée
   * @return destinationCategory
   **/
  @JsonProperty(JSON_PROPERTY_DESTINATION_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDestinationCategory() {
    return destinationCategory;
  }

  @JsonProperty(JSON_PROPERTY_DESTINATION_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestinationCategory(String destinationCategory) {
    this.destinationCategory = destinationCategory;
  }

  public Destination healthcareType(String healthcareType) {

    this.healthcareType = healthcareType;
    return this;
  }

  /**
   * A valoriser par le code de la nomenclature ActiviteOperationnelle
   * @return healthcareType
   **/
  @JsonProperty(JSON_PROPERTY_HEALTHCARE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHealthcareType() {
    return healthcareType;
  }

  @JsonProperty(JSON_PROPERTY_HEALTHCARE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHealthcareType(String healthcareType) {
    this.healthcareType = healthcareType;
  }

  public Destination finess(String finess) {

    this.finess = finess;
    return this;
  }

  /**
   * FINESS géographique de l’établissement de destination (9 chiffres)
   * @return finess
   **/
  @JsonProperty(JSON_PROPERTY_FINESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFiness() {
    return finess;
  }

  @JsonProperty(JSON_PROPERTY_FINESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFiness(String finess) {
    this.finess = finess;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Destination destination = (Destination)o;
    return Objects.equals(this.destinationCountry,
                          destination.destinationCountry) &&
        Objects.equals(this.destinationCategory,
                       destination.destinationCategory) &&
        Objects.equals(this.healthcareType, destination.healthcareType) &&
        Objects.equals(this.finess, destination.finess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationCountry, destinationCategory, healthcareType,
                        finess);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Destination {\n");
    sb.append("    destinationCountry: ")
        .append(toIndentedString(destinationCountry))
        .append("\n");
    sb.append("    destinationCategory: ")
        .append(toIndentedString(destinationCategory))
        .append("\n");
    sb.append("    healthcareType: ")
        .append(toIndentedString(healthcareType))
        .append("\n");
    sb.append("    finess: ").append(toIndentedString(finess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
