/**
 * Copyright © 2023-2025 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.rpis;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.util.Arrays;
import java.util.Arrays;
import java.util.Objects;

/**
 * Team
 */
@JsonPropertyOrder({Team.JSON_PROPERTY_DOCTOR, Team.JSON_PROPERTY_NURSE,
                    Team.JSON_PROPERTY_DRIVER})
@JsonTypeName("team")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Team {
  public static final String JSON_PROPERTY_DOCTOR = "doctor";
  private Boolean doctor;

  public static final String JSON_PROPERTY_NURSE = "nurse";
  private Boolean nurse;

  public static final String JSON_PROPERTY_DRIVER = "driver";
  private Boolean driver;

  public Team() {}

  public Team doctor(Boolean doctor) {

    this.doctor = doctor;
    return this;
  }

  /**
   * Permet d&#39;identifier si un médecin compose l&#39;équipe. Cette donnée
   *peut être automatiquement déduite, dès que le nom et prénom du médecin est
   *saisi sur la tablette.
   * @return doctor
   **/
  @JsonProperty(JSON_PROPERTY_DOCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDoctor() {
    return doctor;
  }

  @JsonProperty(JSON_PROPERTY_DOCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoctor(Boolean doctor) {
    this.doctor = doctor;
  }

  public Team nurse(Boolean nurse) {

    this.nurse = nurse;
    return this;
  }

  /**
   * Permet d&#39;identifier si un infirmier compose l&#39;équipe. Cette donnée
   *peut être automatiquement déduite, dès que le nom et prénom de
   *l&#39;infirmier est saisi sur la tablette.
   * @return nurse
   **/
  @JsonProperty(JSON_PROPERTY_NURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNurse() {
    return nurse;
  }

  @JsonProperty(JSON_PROPERTY_NURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNurse(Boolean nurse) {
    this.nurse = nurse;
  }

  public Team driver(Boolean driver) {

    this.driver = driver;
    return this;
  }

  /**
   * Permet d&#39;identifier si un ambulancier compose l&#39;équipe. Cette
   *donnée peut être automatiquement déduite, dès que le nom et prénom de
   *l&#39;ambulancier est saisi sur la tablette.
   * @return driver
   **/
  @JsonProperty(JSON_PROPERTY_DRIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDriver() {
    return driver;
  }

  @JsonProperty(JSON_PROPERTY_DRIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDriver(Boolean driver) {
    this.driver = driver;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Team team = (Team)o;
    return Objects.equals(this.doctor, team.doctor) &&
        Objects.equals(this.nurse, team.nurse) &&
        Objects.equals(this.driver, team.driver);
  }

  @Override
  public int hashCode() {
    return Objects.hash(doctor, nurse, driver);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Team {\n");
    sb.append("    doctor: ").append(toIndentedString(doctor)).append("\n");
    sb.append("    nurse: ").append(toIndentedString(nurse)).append("\n");
    sb.append("    driver: ").append(toIndentedString(driver)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
