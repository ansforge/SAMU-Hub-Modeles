/**
 * Copyright Â© 2023-2024 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.health;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.health.CaseDetails;
import com.hubsante.model.health.RiskThreat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * Qualification
 */
@JsonPropertyOrder({Qualification.JSON_PROPERTY_RISK_THREAT,
                    Qualification.JSON_PROPERTY_DETAILS})
@JsonTypeName("qualification")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Qualification {
  public static final String JSON_PROPERTY_RISK_THREAT = "riskThreat";
  private List<RiskThreat> riskThreat;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private CaseDetails details;

  public Qualification() {}

  public Qualification riskThreat(List<RiskThreat> riskThreat) {

    this.riskThreat = riskThreat;
    return this;
  }

  public Qualification addRiskThreatItem(RiskThreat riskThreatItem) {
    if (this.riskThreat == null) {
      this.riskThreat = new ArrayList<>();
    }
    this.riskThreat.add(riskThreatItem);
    return this;
  }

  /**
   * Get riskThreat
   * @return riskThreat
   **/
  @JsonProperty(JSON_PROPERTY_RISK_THREAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RiskThreat> getRiskThreat() {
    return riskThreat;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_RISK_THREAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiskThreat(List<RiskThreat> riskThreat) {
    if (riskThreat == null) {
      return;
    }
    if (this.riskThreat == null) {
      this.riskThreat = new ArrayList<>();
    }
    this.riskThreat.addAll(riskThreat);
  }

  public Qualification details(CaseDetails details) {

    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   **/
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CaseDetails getDetails() {
    return details;
  }

  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(CaseDetails details) {
    this.details = details;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Qualification qualification = (Qualification)o;
    return Objects.equals(this.riskThreat, qualification.riskThreat) &&
        Objects.equals(this.details, qualification.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(riskThreat, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Qualification {\n");
    sb.append("    riskThreat: ")
        .append(toIndentedString(riskThreat))
        .append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
