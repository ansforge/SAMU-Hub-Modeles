/**
 * Copyright © 2023-2024 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.health.update;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import java.util.Arrays;
import java.util.Arrays;
import java.util.Objects;

/**
 * PatientDetail
 */
@JsonPropertyOrder(
    {PatientDetail.JSON_PROPERTY_WEIGHT, PatientDetail.JSON_PROPERTY_HEIGHT,
     PatientDetail.JSON_PROPERTY_AGE, PatientDetail.JSON_PROPERTY_CARE_LEVEL})
@JsonTypeName("patientDetail")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class PatientDetail {
  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private Integer weight;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private Integer height;

  public static final String JSON_PROPERTY_AGE = "age";
  private String age;

  /**
   * A valoriser avec le niveau de soins spécifique au patient
   */
  public enum CareLevelEnum {
    R1("R1"),

    R2("R2"),

    R3("R3"),

    R4("R4");

    private String value;

    CareLevelEnum(String value) { this.value = value; }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CareLevelEnum fromValue(String value) {
      for (CareLevelEnum b : CareLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CARE_LEVEL = "careLevel";
  private CareLevelEnum careLevel;

  public PatientDetail() {}

  public PatientDetail weight(Integer weight) {

    this.weight = weight;
    return this;
  }

  /**
   * A valoriser avec le poids en kilogrammes
   * @return weight
   **/
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWeight() {
    return weight;
  }

  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeight(Integer weight) {
    this.weight = weight;
  }

  public PatientDetail height(Integer height) {

    this.height = height;
    return this;
  }

  /**
   * A valoriser avec la taille en centimètres du patient
   * @return height
   **/
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHeight() {
    return height;
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(Integer height) {
    this.height = height;
  }

  public PatientDetail age(String age) {

    this.age = age;
    return this;
  }

  /**
   * A valoriser avec l&#39;age du patient. Au format \&quot;Durée\&quot; de la
   *norme ISO 8601 (https://fr.wikipedia.org/wiki/ISO_8601#Dur%C3%A9e) et en
   *n&#39;utilisant qu&#39;une seule unité de durée (années, mois, semaines ou
   *jours)
   * @return age
   **/
  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAge() {
    return age;
  }

  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAge(String age) {
    this.age = age;
  }

  public PatientDetail careLevel(CareLevelEnum careLevel) {

    this.careLevel = careLevel;
    return this;
  }

  /**
   * A valoriser avec le niveau de soins spécifique au patient
   * @return careLevel
   **/
  @JsonProperty(JSON_PROPERTY_CARE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CareLevelEnum getCareLevel() {
    return careLevel;
  }

  @JsonProperty(JSON_PROPERTY_CARE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCareLevel(CareLevelEnum careLevel) {
    this.careLevel = careLevel;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatientDetail patientDetail = (PatientDetail)o;
    return Objects.equals(this.weight, patientDetail.weight) &&
        Objects.equals(this.height, patientDetail.height) &&
        Objects.equals(this.age, patientDetail.age) &&
        Objects.equals(this.careLevel, patientDetail.careLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(weight, height, age, careLevel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatientDetail {\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    careLevel: ")
        .append(toIndentedString(careLevel))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
