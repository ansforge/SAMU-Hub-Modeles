/**
 * Copyright © 2023-2024 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.health;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.health.InsIdentity;
import com.hubsante.model.health.Nomenclature;
import com.hubsante.model.health.PatientDetails;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * Patients
 */
@JsonPropertyOrder({Patients.JSON_PROPERTY_ID, Patients.JSON_PROPERTY_FILE,
                    Patients.JSON_PROPERTY_IDENTITY,
                    Patients.JSON_PROPERTY_WHATS_HAPPEN,
                    Patients.JSON_PROPERTY_DETAILS})
@JsonTypeName("patients")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Patients {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_FILE = "file";
  private List<File> _file;

  public static final String JSON_PROPERTY_IDENTITY = "identity";
  private InsIdentity identity;

  public static final String JSON_PROPERTY_WHATS_HAPPEN = "whatsHappen";
  private Nomenclature whatsHappen;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private PatientDetails details;

  public Patients() {}

  public Patients id(String id) {

    this.id = id;
    return this;
  }

  /**
   * Identifiant technique du patient pour permettre les rapprochements
   *d&#39;infos. Le 1er qui créé l&#39;ID patient a raison.
   * @return id
   **/
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }

  public Patients _file(List<File> _file) {

    this._file = _file;
    return this;
  }

  public Patients addFileItem(File _fileItem) {
    if (this._file == null) {
      this._file = new ArrayList<>();
    }
    this._file.add(_fileItem);
    return this;
  }

  /**
   * Get _file
   * @return _file
   **/
  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<File> getFile() {
    return _file;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFile(List<File> _file) {
    if (_file == null) {
      return;
    }
    if (this._file == null) {
      this._file = new ArrayList<>();
    }
    this._file.addAll(_file);
  }

  public Patients identity(InsIdentity identity) {

    this.identity = identity;
    return this;
  }

  /**
   * Get identity
   * @return identity
   **/
  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InsIdentity getIdentity() {
    return identity;
  }

  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentity(InsIdentity identity) {
    this.identity = identity;
  }

  public Patients whatsHappen(Nomenclature whatsHappen) {

    this.whatsHappen = whatsHappen;
    return this;
  }

  /**
   * Get whatsHappen
   * @return whatsHappen
   **/
  @JsonProperty(JSON_PROPERTY_WHATS_HAPPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Nomenclature getWhatsHappen() {
    return whatsHappen;
  }

  @JsonProperty(JSON_PROPERTY_WHATS_HAPPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWhatsHappen(Nomenclature whatsHappen) {
    this.whatsHappen = whatsHappen;
  }

  public Patients details(PatientDetails details) {

    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   **/
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PatientDetails getDetails() {
    return details;
  }

  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(PatientDetails details) {
    this.details = details;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Patients patients = (Patients)o;
    return Objects.equals(this.id, patients.id) &&
        Objects.equals(this._file, patients._file) &&
        Objects.equals(this.identity, patients.identity) &&
        Objects.equals(this.whatsHappen, patients.whatsHappen) &&
        Objects.equals(this.details, patients.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, _file, identity, whatsHappen, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Patients {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    whatsHappen: ")
        .append(toIndentedString(whatsHappen))
        .append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
