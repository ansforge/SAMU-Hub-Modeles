/**
 * Copyright © 2023-2025 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.health;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.health.AdministrativeFile;
import com.hubsante.model.health.HealthMotive;
import com.hubsante.model.health.Hypothesis;
import com.hubsante.model.health.Identity;
import com.hubsante.model.health.PatientDetail;
import java.util.Arrays;
import java.util.Arrays;
import java.util.Objects;

/**
 * Patient
 */
@JsonPropertyOrder(
    {Patient.JSON_PROPERTY_PATIENT_ID,
     Patient.JSON_PROPERTY_ADMINISTRATIVE_FILE, Patient.JSON_PROPERTY_IDENTITY,
     Patient.JSON_PROPERTY_HEALTH_MOTIVE, Patient.JSON_PROPERTY_DETAIL,
     Patient.JSON_PROPERTY_HYPOTHESIS})
@JsonTypeName("patient")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class Patient {
  public static final String JSON_PROPERTY_PATIENT_ID = "patientId";
  private String patientId;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_FILE =
      "administrativeFile";
  private AdministrativeFile administrativeFile;

  public static final String JSON_PROPERTY_IDENTITY = "identity";
  private Identity identity;

  public static final String JSON_PROPERTY_HEALTH_MOTIVE = "healthMotive";
  private HealthMotive healthMotive;

  public static final String JSON_PROPERTY_DETAIL = "detail";
  private PatientDetail detail;

  public static final String JSON_PROPERTY_HYPOTHESIS = "hypothesis";
  private Hypothesis hypothesis;

  public Patient() {}

  public Patient patientId(String patientId) {

    this.patientId = patientId;
    return this;
  }

  /**
   * Identifiant partagé du patient, généré une seule fois par le système du
   *partenaire qui créé le patient. Il est valorisé comme suit lors de sa
   *création :  {OrgId émetteur}.patient.{n°patient unique dans le système
   *émetteur}  OU, si un n°patient unique n&#39;existe pas dans le système
   *émetteur : {ID émetteur}.{senderCaseId}.patient.{numéro d’ordre
   *chronologique au dossier}
   * @return patientId
   **/
  @JsonProperty(JSON_PROPERTY_PATIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPatientId() {
    return patientId;
  }

  @JsonProperty(JSON_PROPERTY_PATIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientId(String patientId) {
    this.patientId = patientId;
  }

  public Patient administrativeFile(AdministrativeFile administrativeFile) {

    this.administrativeFile = administrativeFile;
    return this;
  }

  /**
   * Get administrativeFile
   * @return administrativeFile
   **/
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AdministrativeFile getAdministrativeFile() {
    return administrativeFile;
  }

  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeFile(AdministrativeFile administrativeFile) {
    this.administrativeFile = administrativeFile;
  }

  public Patient identity(Identity identity) {

    this.identity = identity;
    return this;
  }

  /**
   * Get identity
   * @return identity
   **/
  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Identity getIdentity() {
    return identity;
  }

  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentity(Identity identity) {
    this.identity = identity;
  }

  public Patient healthMotive(HealthMotive healthMotive) {

    this.healthMotive = healthMotive;
    return this;
  }

  /**
   * Get healthMotive
   * @return healthMotive
   **/
  @JsonProperty(JSON_PROPERTY_HEALTH_MOTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HealthMotive getHealthMotive() {
    return healthMotive;
  }

  @JsonProperty(JSON_PROPERTY_HEALTH_MOTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHealthMotive(HealthMotive healthMotive) {
    this.healthMotive = healthMotive;
  }

  public Patient detail(PatientDetail detail) {

    this.detail = detail;
    return this;
  }

  /**
   * Get detail
   * @return detail
   **/
  @JsonProperty(JSON_PROPERTY_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PatientDetail getDetail() {
    return detail;
  }

  @JsonProperty(JSON_PROPERTY_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetail(PatientDetail detail) {
    this.detail = detail;
  }

  public Patient hypothesis(Hypothesis hypothesis) {

    this.hypothesis = hypothesis;
    return this;
  }

  /**
   * Get hypothesis
   * @return hypothesis
   **/
  @JsonProperty(JSON_PROPERTY_HYPOTHESIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Hypothesis getHypothesis() {
    return hypothesis;
  }

  @JsonProperty(JSON_PROPERTY_HYPOTHESIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHypothesis(Hypothesis hypothesis) {
    this.hypothesis = hypothesis;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Patient patient = (Patient)o;
    return Objects.equals(this.patientId, patient.patientId) &&
        Objects.equals(this.administrativeFile, patient.administrativeFile) &&
        Objects.equals(this.identity, patient.identity) &&
        Objects.equals(this.healthMotive, patient.healthMotive) &&
        Objects.equals(this.detail, patient.detail) &&
        Objects.equals(this.hypothesis, patient.hypothesis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(patientId, administrativeFile, identity, healthMotive,
                        detail, hypothesis);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Patient {\n");
    sb.append("    patientId: ")
        .append(toIndentedString(patientId))
        .append("\n");
    sb.append("    administrativeFile: ")
        .append(toIndentedString(administrativeFile))
        .append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    healthMotive: ")
        .append(toIndentedString(healthMotive))
        .append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    hypothesis: ")
        .append(toIndentedString(hypothesis))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
