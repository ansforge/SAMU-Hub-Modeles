/**
 * Copyright Â© 2023-2024 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.health;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.health.Contact;
import com.hubsante.model.health.ExternalId;
import com.hubsante.model.health.GeneralPractitioner;
import com.hubsante.model.health.PersonalAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * ModelFile
 */
@JsonPropertyOrder({ModelFile.JSON_PROPERTY_EXTERNAL_ID,
                    ModelFile.JSON_PROPERTY_CONTACT,
                    ModelFile.JSON_PROPERTY_PERSONAL_ADDRESS,
                    ModelFile.JSON_PROPERTY_GENERAL_PRACTITIONER})
@JsonTypeName("_file")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class ModelFile {
  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private List<ExternalId> externalId;

  public static final String JSON_PROPERTY_CONTACT = "contact";
  private List<Contact> contact;

  public static final String JSON_PROPERTY_PERSONAL_ADDRESS = "personalAddress";
  private PersonalAddress personalAddress;

  public static final String JSON_PROPERTY_GENERAL_PRACTITIONER =
      "generalPractitioner";
  private GeneralPractitioner generalPractitioner;

  public ModelFile() {}

  public ModelFile externalId(List<ExternalId> externalId) {

    this.externalId = externalId;
    return this;
  }

  public ModelFile addExternalIdItem(ExternalId externalIdItem) {
    if (this.externalId == null) {
      this.externalId = new ArrayList<>();
    }
    this.externalId.add(externalIdItem);
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   **/
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ExternalId> getExternalId() {
    return externalId;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalId(List<ExternalId> externalId) {
    if (externalId == null) {
      return;
    }
    if (this.externalId == null) {
      this.externalId = new ArrayList<>();
    }
    this.externalId.addAll(externalId);
  }

  public ModelFile contact(List<Contact> contact) {

    this.contact = contact;
    return this;
  }

  public ModelFile addContactItem(Contact contactItem) {
    if (this.contact == null) {
      this.contact = new ArrayList<>();
    }
    this.contact.add(contactItem);
    return this;
  }

  /**
   * Get contact
   * @return contact
   **/
  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Contact> getContact() {
    return contact;
  }

  @JacksonXmlElementWrapper(useWrapping = false)

  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact(List<Contact> contact) {
    if (contact == null) {
      return;
    }
    if (this.contact == null) {
      this.contact = new ArrayList<>();
    }
    this.contact.addAll(contact);
  }

  public ModelFile personalAddress(PersonalAddress personalAddress) {

    this.personalAddress = personalAddress;
    return this;
  }

  /**
   * Get personalAddress
   * @return personalAddress
   **/
  @JsonProperty(JSON_PROPERTY_PERSONAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PersonalAddress getPersonalAddress() {
    return personalAddress;
  }

  @JsonProperty(JSON_PROPERTY_PERSONAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalAddress(PersonalAddress personalAddress) {
    this.personalAddress = personalAddress;
  }

  public ModelFile
  generalPractitioner(GeneralPractitioner generalPractitioner) {

    this.generalPractitioner = generalPractitioner;
    return this;
  }

  /**
   * Get generalPractitioner
   * @return generalPractitioner
   **/
  @JsonProperty(JSON_PROPERTY_GENERAL_PRACTITIONER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GeneralPractitioner getGeneralPractitioner() {
    return generalPractitioner;
  }

  @JsonProperty(JSON_PROPERTY_GENERAL_PRACTITIONER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeneralPractitioner(GeneralPractitioner generalPractitioner) {
    this.generalPractitioner = generalPractitioner;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelFile _file = (ModelFile)o;
    return Objects.equals(this.externalId, _file.externalId) &&
        Objects.equals(this.contact, _file.contact) &&
        Objects.equals(this.personalAddress, _file.personalAddress) &&
        Objects.equals(this.generalPractitioner, _file.generalPractitioner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalId, contact, personalAddress,
                        generalPractitioner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelFile {\n");
    sb.append("    externalId: ")
        .append(toIndentedString(externalId))
        .append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    personalAddress: ")
        .append(toIndentedString(personalAddress))
        .append("\n");
    sb.append("    generalPractitioner: ")
        .append(toIndentedString(generalPractitioner))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
