/**
 * Copyright © 2023-2025 Agence du Numerique en Sante (ANS)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package com.hubsante.model.sas;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import com.hubsante.model.sas.Organization;
import com.hubsante.model.sas.Practitioner;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Arrays;
import java.util.Objects;

/**
 * CreateAppointment
 */
@JsonPropertyOrder({CreateAppointment.JSON_PROPERTY_APPOINTMENT_ID,
                    CreateAppointment.JSON_PROPERTY_CREATED,
                    CreateAppointment.JSON_PROPERTY_START,
                    CreateAppointment.JSON_PROPERTY_END,
                    CreateAppointment.JSON_PROPERTY_STATUS,
                    CreateAppointment.JSON_PROPERTY_ORIENTATION_CATEGORY,
                    CreateAppointment.JSON_PROPERTY_PRACTITIONER,
                    CreateAppointment.JSON_PROPERTY_ORGANIZATION})
@JsonTypeName("createAppointment")
@JsonInclude(JsonInclude.Include.NON_EMPTY)

public class CreateAppointment {
  @JacksonXmlProperty(isAttribute = true)
  String xmlns = "urn:emergency:eda:1.9:createAppointment";
  public static final String JSON_PROPERTY_APPOINTMENT_ID = "appointmentId";
  private String appointmentId;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_START = "start";
  private OffsetDateTime start;

  public static final String JSON_PROPERTY_END = "end";
  private OffsetDateTime end;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_ORIENTATION_CATEGORY =
      "orientationCategory";
  private String orientationCategory;

  public static final String JSON_PROPERTY_PRACTITIONER = "practitioner";
  private Practitioner practitioner;

  public static final String JSON_PROPERTY_ORGANIZATION = "organization";
  private Organization organization;

  public CreateAppointment() {}

  public CreateAppointment appointmentId(String appointmentId) {

    this.appointmentId = appointmentId;
    return this;
  }

  /**
   * Un identifiant technique unique par RDV est transmis.   Cet identifiant est
   *défini par la plateforme numérique SAS et peut prendre la forme d’un UUID
   *par exemple.  La solution éditeur devra s’appuyer sur cet ID pour la gestion
   *des requêtes de mises à jour.
   * @return appointmentId
   **/
  @JsonProperty(JSON_PROPERTY_APPOINTMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAppointmentId() {
    return appointmentId;
  }

  @JsonProperty(JSON_PROPERTY_APPOINTMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAppointmentId(String appointmentId) {
    this.appointmentId = appointmentId;
  }

  public CreateAppointment created(OffsetDateTime created) {

    this.created = created;
    return this;
  }

  /**
   * Indique la date et l’heure de la prise de RDV
   * @return created
   **/
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreated() {
    return created;
  }

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public CreateAppointment start(OffsetDateTime start) {

    this.start = start;
    return this;
  }

  /**
   * Indique la date et l’horaire de début du rendez-vous
   * @return start
   **/
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getStart() {
    return start;
  }

  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public CreateAppointment end(OffsetDateTime end) {

    this.end = end;
    return this;
  }

  /**
   * Indique la date et l’horaire de fin du rendez-vous
   * @return end
   **/
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getEnd() {
    return end;
  }

  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }

  public CreateAppointment status(String status) {

    this.status = status;
    return this;
  }

  /**
   * Indique le statut du rendez-vous
   * @return status
   **/
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }

  public CreateAppointment orientationCategory(String orientationCategory) {

    this.orientationCategory = orientationCategory;
    return this;
  }

  /**
   * Indique la catégorie de l’orientation de rendez-vous
   * @return orientationCategory
   **/
  @JsonProperty(JSON_PROPERTY_ORIENTATION_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrientationCategory() {
    return orientationCategory;
  }

  @JsonProperty(JSON_PROPERTY_ORIENTATION_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrientationCategory(String orientationCategory) {
    this.orientationCategory = orientationCategory;
  }

  public CreateAppointment practitioner(Practitioner practitioner) {

    this.practitioner = practitioner;
    return this;
  }

  /**
   * Get practitioner
   * @return practitioner
   **/
  @JsonProperty(JSON_PROPERTY_PRACTITIONER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Practitioner getPractitioner() {
    return practitioner;
  }

  @JsonProperty(JSON_PROPERTY_PRACTITIONER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPractitioner(Practitioner practitioner) {
    this.practitioner = practitioner;
  }

  public CreateAppointment organization(Organization organization) {

    this.organization = organization;
    return this;
  }

  /**
   * Get organization
   * @return organization
   **/
  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Organization getOrganization() {
    return organization;
  }

  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganization(Organization organization) {
    this.organization = organization;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAppointment createAppointment = (CreateAppointment)o;
    return Objects.equals(this.appointmentId,
                          createAppointment.appointmentId) &&
        Objects.equals(this.created, createAppointment.created) &&
        Objects.equals(this.start, createAppointment.start) &&
        Objects.equals(this.end, createAppointment.end) &&
        Objects.equals(this.status, createAppointment.status) &&
        Objects.equals(this.orientationCategory,
                       createAppointment.orientationCategory) &&
        Objects.equals(this.practitioner, createAppointment.practitioner) &&
        Objects.equals(this.organization, createAppointment.organization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appointmentId, created, start, end, status,
                        orientationCategory, practitioner, organization);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAppointment {\n");
    sb.append("    appointmentId: ")
        .append(toIndentedString(appointmentId))
        .append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    orientationCategory: ")
        .append(toIndentedString(orientationCategory))
        .append("\n");
    sb.append("    practitioner: ")
        .append(toIndentedString(practitioner))
        .append("\n");
    sb.append("    organization: ")
        .append(toIndentedString(organization))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
