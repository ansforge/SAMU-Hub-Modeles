# Composite action | https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-composite-action
name: Generate Model
description: Generate the java classes & spec based on the model
runs:
  using: "composite"
  steps:
    - name: Install Graphviz
      uses: ts-graphviz/setup-graphviz@v1

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install python requirements
      working-directory: ./csv_parser
      shell: bash
      run: pip install -r ./requirements.txt

    - name: Clean up old generated schemas
      working-directory: ./src/main/resources
      shell: bash
      run: find ./json-schema -type f -name '*.json' ! -name 'customContent.schema.json' ! -name 'EDXL-DE-*.schema.json' -exec rm {} +
      
    - name: Clean up old generated java classes
      working-directory: ./src/main/java/com/hubsante/model
      # We specifically only remove FOLDERS with the exception of a couple manually created ones
      shell: bash
      run: find . -mindepth 1 -maxdepth 1 -type d ! -name 'builders' ! -name 'config' ! -name 'custom' ! -name 'edxl' ! -name 'exception' ! -name 'report' -exec rm -r {} +
    
    - name: Run csv_parser and collect OpenAPI & JSON Schemas
      working-directory: ./csv_parser
      shell: bash
      run: python workflow.py --stage parser_and_mv

    - name: Run csv_parser to generate schemas.yaml
      working-directory: ./csv_parser
      shell: bash
      run: python workflow.py --stage output_schemas_yaml

    - name: Collect schemas.yaml and copy it to json_schema2xsd
      working-directory: ./csv_parser
      shell: bash
      run: |
        cp ./out/schemas.yaml ./json_schema2xsd/src/main/resources/schemas.yaml
        
    - name: Setup gomplate
      uses: jason-dour/action-setup-gomplate@v1.1.0
      with:
        gomplate-version: v4.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run automatic-schema-generator and move generated files to corresponding locations
      working-directory: ./automatic-schema-generator
      shell: bash
      run: |
        rm -r output || true
        chmod +x ./automatic-generator.sh
        ./automatic-generator.sh

        # Move generated OpenAPI config files to the corresponding locations
        rm -r ../generator/config/generated || true
        rsync -a --remove-source-files output/generator ..
        rm -r ../generator_ruby/config/generated || true
        rsync -a --remove-source-files output/generator_ruby ..
        rm -r ../generator_python/config/generated || true
        rsync -a --remove-source-files output/generator_python ..
        rm -r ../generator_csharp/config/generated || true
        rsync -a --remove-source-files output/generator_csharp ..

        # Move generated EDXL-DE and JSON Schemas to the corresponding locations
        rsync -a --remove-source-files output/edxl ../src/main/java/com/hubsante/model
        rsync -a --remove-source-files output/json-schema ../src/main/resources
        rsync -a --remove-source-files output/xsd ../src/main/resources

    - name: Install JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Generate XSDs
      working-directory: ./csv_parser/json_schema2xsd
      shell: bash
      run: gradle run

    - name: Move XSDs to src
      working-directory: ./csv_parser/json_schema2xsd
      shell: bash
      run: |
        # Clean XSD repo but keep manual XSDs
        find ../../src/main/resources/xsd -type f -name '*.xsd' ! -name 'EDXL-DE-*.xsd' ! -name 'customContent.xsd' ! -name 'RC-DE.xsd' ! -name 'RC-XML-ContentType.xsd' ! -name 'RS-ERROR.xsd' ! -path '**/other-supporting-schema/*' -exec rm {} +
        mv out/*.xsd ../../src/main/resources/xsd/

    - name: Remove input JSON Schemas
      working-directory: ./csv_parser/json_schema2xsd
      shell: bash
      run: |
        rm src/main/resources/*.json

    - name: Install node env üèó
      uses: actions/setup-node@v4
      with:
        node-version: 16

    - name: Install openapi-generator-cli
      shell: bash
      run: npm install -g @openapitools/openapi-generator-cli

    - name: Install linter
      shell: bash
      run: sudo apt install -y clang-format

    - name: Generate Java classes
      working-directory: ./generator
      shell: bash
      run: |
        # Iterate over each file in the ./config directory, including the entire subfolder structure
        # and then run @openapitools/openapi-generator-cli generate for each file found
        # Important notice:          
        # Results of the find command are sorted in an alphabetic order before being passed to xargs
        # This means that since the order of class generation is important, it's necessary to maintain an adequately 
        # named file structure in the ./config/** directories
        # generator-config.json (if exists) -> usecase.generator-config.json -> wrapper.generator-config.json
        find ./config/ -type f | sort -n | while read -r file; do npx @openapitools/openapi-generator-cli generate -c "$file" --skip-validate-spec; done
        
    - name: Replace src/ with generated classes
      shell: bash
      run: |
        rm -r ./src/main/java/com/hubsante/model/rcde || true
        rm -r ./src/main/java/com/hubsante/model/cisu || true
        rm -r ./src/main/java/com/hubsante/model/health || true
        rm -r ./src/main/java/com/hubsante/model/emsi || true
        rm -r ./src/main/java/com/hubsante/model/geolocation || true
        rm -r ./src/main/java/com/hubsante/model/resources || true
        rm -r ./src/main/java/com/hubsante/model/rpis || true
        rm -r ./src/main/java/com/hubsante/model/technical || true
        rm -r ./generator/classes/src/main/java/com/hubsante/model/report/ErrorCode.java || true
        cp -r ./generator/classes/src/main/java/com/hubsante/model/* ./src/main/java/com/hubsante/model/

    - name: Grant execute permission for Gradlew
      shell: bash
      run: chmod +x ./gradlew

    - name: Apply license
      shell: bash
      run: ./gradlew licenseFormat

    - name: Delete old xml files
      shell: bash
      run: |
        find ./src/main/resources/sample/examples -name "*.xml" -type f -delete

    - name: Generate XML files
      shell: bash
      run: |
        ./gradlew generateXml
      continue-on-error: true

    - name: Commit and push changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: ‚öôÔ∏è Auto-g√©n√©ration des classes et des specs