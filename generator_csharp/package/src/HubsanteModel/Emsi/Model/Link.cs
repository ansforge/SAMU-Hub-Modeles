/*
 * OpenAPI
 *
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HubsanteModel/Emsi.Client.OpenAPIDateConverter;

namespace HubsanteModel/Emsi.Model
{
    /// <summary>
    /// Link
    /// </summary>
    [DataContract(Name = "link")]
    public partial class Link : IValidatableObject
    {
        /// <summary>
        /// Optionnel : à valoriser avec la constante \&quot;SPRSDS\&quot; pour un message EMSI, incluant des missions RDC et/ou OPG et avec le libellé \&quot;ADDSTO\&quot; pour un message EMSI, incluant uniquement qu&#39;une demande de concours (EMSI-DC).
        /// </summary>
        /// <value>Optionnel : à valoriser avec la constante \&quot;SPRSDS\&quot; pour un message EMSI, incluant des missions RDC et/ou OPG et avec le libellé \&quot;ADDSTO\&quot; pour un message EMSI, incluant uniquement qu&#39;une demande de concours (EMSI-DC).</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LINKROLEEnum
        {
            /// <summary>
            /// Enum ADDSTO for value: ADDSTO
            /// </summary>
            [EnumMember(Value = "ADDSTO")]
            ADDSTO = 1,

            /// <summary>
            /// Enum SPRSDS for value: SPRSDS
            /// </summary>
            [EnumMember(Value = "SPRSDS")]
            SPRSDS = 2
        }


        /// <summary>
        /// Optionnel : à valoriser avec la constante \&quot;SPRSDS\&quot; pour un message EMSI, incluant des missions RDC et/ou OPG et avec le libellé \&quot;ADDSTO\&quot; pour un message EMSI, incluant uniquement qu&#39;une demande de concours (EMSI-DC).
        /// </summary>
        /// <value>Optionnel : à valoriser avec la constante \&quot;SPRSDS\&quot; pour un message EMSI, incluant des missions RDC et/ou OPG et avec le libellé \&quot;ADDSTO\&quot; pour un message EMSI, incluant uniquement qu&#39;une demande de concours (EMSI-DC).</value>
        /*
        <example>example.json#/CONTEXT/LINK/0/LINK_ROLE</example>
        */
        [DataMember(Name = "LINK_ROLE", EmitDefaultValue = false)]
        public LINKROLEEnum? LINK_ROLE { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Link" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Link() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Link" /> class.
        /// </summary>
        /// <param name="iD">A renseigner avec l&#39;identifiant de l&#39;organisation (champ organization du message RC-EDA) suivi de l&#39;identifiant local de l&#39;affaire du partenaire requérant (champ senderCaseId du message RC-EDA). {pays}.{domaine}.{organisation}.{structure interne}*.{unité fonctionnelle}*.{numéro de dossier} (required).</param>
        /// <param name="lINKROLE">Optionnel : à valoriser avec la constante \&quot;SPRSDS\&quot; pour un message EMSI, incluant des missions RDC et/ou OPG et avec le libellé \&quot;ADDSTO\&quot; pour un message EMSI, incluant uniquement qu&#39;une demande de concours (EMSI-DC)..</param>
        public Link(string iD = default(string), LINKROLEEnum? lINKROLE = default(LINKROLEEnum?))
        {
            // to ensure "iD" is required (not null)
            if (iD == null)
            {
                throw new ArgumentNullException("iD is a required property for Link and cannot be null");
            }
            this.ID = iD;
            this.LINK_ROLE = lINKROLE;
        }

        /// <summary>
        /// A renseigner avec l&#39;identifiant de l&#39;organisation (champ organization du message RC-EDA) suivi de l&#39;identifiant local de l&#39;affaire du partenaire requérant (champ senderCaseId du message RC-EDA). {pays}.{domaine}.{organisation}.{structure interne}*.{unité fonctionnelle}*.{numéro de dossier}
        /// </summary>
        /// <value>A renseigner avec l&#39;identifiant de l&#39;organisation (champ organization du message RC-EDA) suivi de l&#39;identifiant local de l&#39;affaire du partenaire requérant (champ senderCaseId du message RC-EDA). {pays}.{domaine}.{organisation}.{structure interne}*.{unité fonctionnelle}*.{numéro de dossier}</value>
        /*
        <example>example.json#/CONTEXT/LINK/0/ID</example>
        */
        [DataMember(Name = "ID", IsRequired = true, EmitDefaultValue = true)]
        public string ID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Link {\n");
            sb.Append("  ID: ").Append(ID).Append("\n");
            sb.Append("  LINK_ROLE: ").Append(LINK_ROLE).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
