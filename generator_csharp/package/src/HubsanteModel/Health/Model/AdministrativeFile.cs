/*
 * OpenAPI
 *
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HubsanteModel/Health.Client.OpenAPIDateConverter;

namespace HubsanteModel/Health.Model
{
    /// <summary>
    /// AdministrativeFile
    /// </summary>
    [DataContract(Name = "administrativeFile")]
    public partial class AdministrativeFile : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AdministrativeFile" /> class.
        /// </summary>
        /// <param name="externalId">externalId.</param>
        /// <param name="generalPractitioner">generalPractitioner.</param>
        public AdministrativeFile(List<ExternalId> externalId = default(List<ExternalId>), GeneralPractitioner generalPractitioner = default(GeneralPractitioner))
        {
            this.ExternalId = externalId;
            this.GeneralPractitioner = generalPractitioner;
        }

        /// <summary>
        /// Gets or Sets ExternalId
        /// </summary>
        [DataMember(Name = "externalId", EmitDefaultValue = false)]
        public List<ExternalId> ExternalId { get; set; }

        /// <summary>
        /// Gets or Sets GeneralPractitioner
        /// </summary>
        [DataMember(Name = "generalPractitioner", EmitDefaultValue = false)]
        public GeneralPractitioner GeneralPractitioner { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AdministrativeFile {\n");
            sb.Append("  ExternalId: ").Append(ExternalId).Append("\n");
            sb.Append("  GeneralPractitioner: ").Append(GeneralPractitioner).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
