/*
 * OpenAPI
 *
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HubsanteModel/Health.Client.OpenAPIDateConverter;

namespace HubsanteModel/Health.Model
{
    /// <summary>
    /// CustomMap
    /// </summary>
    [DataContract(Name = "customMap")]
    public partial class CustomMap : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomMap" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomMap() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomMap" /> class.
        /// </summary>
        /// <param name="key">A valoriser avec le nom de la balise (required).</param>
        /// <param name="label">A valoriser avec le libellé correspondant.</param>
        /// <param name="value">A valoriser avec la valeur associée à la clé (required).</param>
        /// <param name="freetext">Informations complémentaires sur le contexte / utilisation de cette correspondance additionnelle.</param>
        public CustomMap(string key = default(string), string label = default(string), string value = default(string), string freetext = default(string))
        {
            // to ensure "key" is required (not null)
            if (key == null)
            {
                throw new ArgumentNullException("key is a required property for CustomMap and cannot be null");
            }
            this.Key = key;
            // to ensure "value" is required (not null)
            if (value == null)
            {
                throw new ArgumentNullException("value is a required property for CustomMap and cannot be null");
            }
            this.Value = value;
            this.Label = label;
            this.Freetext = freetext;
        }

        /// <summary>
        /// A valoriser avec le nom de la balise
        /// </summary>
        /// <value>A valoriser avec le nom de la balise</value>
        /*
        <example>example.json#/additionalInformation/customMap/0/key</example>
        */
        [DataMember(Name = "key", IsRequired = true, EmitDefaultValue = true)]
        public string Key { get; set; }

        /// <summary>
        /// A valoriser avec le libellé correspondant
        /// </summary>
        /// <value>A valoriser avec le libellé correspondant</value>
        /*
        <example>example.json#/additionalInformation/customMap/0/label</example>
        */
        [DataMember(Name = "label", EmitDefaultValue = false)]
        public string Label { get; set; }

        /// <summary>
        /// A valoriser avec la valeur associée à la clé
        /// </summary>
        /// <value>A valoriser avec la valeur associée à la clé</value>
        /*
        <example>example.json#/additionalInformation/customMap/0/value</example>
        */
        [DataMember(Name = "value", IsRequired = true, EmitDefaultValue = true)]
        public string Value { get; set; }

        /// <summary>
        /// Informations complémentaires sur le contexte / utilisation de cette correspondance additionnelle
        /// </summary>
        /// <value>Informations complémentaires sur le contexte / utilisation de cette correspondance additionnelle</value>
        /*
        <example>example.json#/additionalInformation/customMap/0/freetext</example>
        */
        [DataMember(Name = "freetext", EmitDefaultValue = false)]
        public string Freetext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomMap {\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Freetext: ").Append(Freetext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
