/*
 * OpenAPI
 *
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HubsanteModel/Rpis.Client.OpenAPIDateConverter;

namespace HubsanteModel/Rpis.Model
{
    /// <summary>
    /// Decision
    /// </summary>
    [DataContract(Name = "decision")]
    public partial class Decision : IValidatableObject
    {
        /// <summary>
        /// Précise le type de moyen engagé dans l&#39;intervention (SMUR, TSU, HOSPIT, etc.).  A valoriser par un code de la nomenclature SI-SAMU-TYPE_MOYEN.
        /// </summary>
        /// <value>Précise le type de moyen engagé dans l&#39;intervention (SMUR, TSU, HOSPIT, etc.).  A valoriser par un code de la nomenclature SI-SAMU-TYPE_MOYEN.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ResourceTypeEnum
        {
            /// <summary>
            /// Enum SMUR for value: SMUR
            /// </summary>
            [EnumMember(Value = "SMUR")]
            SMUR = 1,

            /// <summary>
            /// Enum SMURADULT for value: SMUR.ADULT
            /// </summary>
            [EnumMember(Value = "SMUR.ADULT")]
            SMURADULT = 2,

            /// <summary>
            /// Enum SMURPED for value: SMUR.PED
            /// </summary>
            [EnumMember(Value = "SMUR.PED")]
            SMURPED = 3,

            /// <summary>
            /// Enum SMURUMHS for value: SMUR.UMH-S
            /// </summary>
            [EnumMember(Value = "SMUR.UMH-S")]
            SMURUMHS = 4,

            /// <summary>
            /// Enum SMURCUMP for value: SMUR.CUMP
            /// </summary>
            [EnumMember(Value = "SMUR.CUMP")]
            SMURCUMP = 5,

            /// <summary>
            /// Enum HOSPIT for value: HOSPIT
            /// </summary>
            [EnumMember(Value = "HOSPIT")]
            HOSPIT = 6,

            /// <summary>
            /// Enum LIBERAL for value: LIBERAL
            /// </summary>
            [EnumMember(Value = "LIBERAL")]
            LIBERAL = 7,

            /// <summary>
            /// Enum LIBERALMG for value: LIBERAL.MG
            /// </summary>
            [EnumMember(Value = "LIBERAL.MG")]
            LIBERALMG = 8,

            /// <summary>
            /// Enum LIBERALPHARM for value: LIBERAL.PHARM
            /// </summary>
            [EnumMember(Value = "LIBERAL.PHARM")]
            LIBERALPHARM = 9,

            /// <summary>
            /// Enum LIBERALINF for value: LIBERAL.INF
            /// </summary>
            [EnumMember(Value = "LIBERAL.INF")]
            LIBERALINF = 10,

            /// <summary>
            /// Enum LIBERALKINE for value: LIBERAL.KINE
            /// </summary>
            [EnumMember(Value = "LIBERAL.KINE")]
            LIBERALKINE = 11,

            /// <summary>
            /// Enum LIBERALSOS for value: LIBERAL.SOS
            /// </summary>
            [EnumMember(Value = "LIBERAL.SOS")]
            LIBERALSOS = 12,

            /// <summary>
            /// Enum LIBERALMMG for value: LIBERAL.MMG
            /// </summary>
            [EnumMember(Value = "LIBERAL.MMG")]
            LIBERALMMG = 13,

            /// <summary>
            /// Enum LIBERALMSPD for value: LIBERAL.MSPD
            /// </summary>
            [EnumMember(Value = "LIBERAL.MSPD")]
            LIBERALMSPD = 14,

            /// <summary>
            /// Enum LIBERALMCS for value: LIBERAL.MCS
            /// </summary>
            [EnumMember(Value = "LIBERAL.MCS")]
            LIBERALMCS = 15,

            /// <summary>
            /// Enum LIBERALSPEMED for value: LIBERAL.SPEMED
            /// </summary>
            [EnumMember(Value = "LIBERAL.SPEMED")]
            LIBERALSPEMED = 16,

            /// <summary>
            /// Enum LIBERALDENT for value: LIBERAL.DENT
            /// </summary>
            [EnumMember(Value = "LIBERAL.DENT")]
            LIBERALDENT = 17,

            /// <summary>
            /// Enum LIBERALLABO for value: LIBERAL.LABO
            /// </summary>
            [EnumMember(Value = "LIBERAL.LABO")]
            LIBERALLABO = 18,

            /// <summary>
            /// Enum LIBERALAUTREPRO for value: LIBERAL.AUTREPRO
            /// </summary>
            [EnumMember(Value = "LIBERAL.AUTREPRO")]
            LIBERALAUTREPRO = 19,

            /// <summary>
            /// Enum TSU for value: TSU
            /// </summary>
            [EnumMember(Value = "TSU")]
            TSU = 20,

            /// <summary>
            /// Enum SIS for value: SIS
            /// </summary>
            [EnumMember(Value = "SIS")]
            SIS = 21,

            /// <summary>
            /// Enum SISMEDSP for value: SIS.MEDSP
            /// </summary>
            [EnumMember(Value = "SIS.MEDSP")]
            SISMEDSP = 22,

            /// <summary>
            /// Enum SISISP for value: SIS.ISP
            /// </summary>
            [EnumMember(Value = "SIS.ISP")]
            SISISP = 23,

            /// <summary>
            /// Enum SISSP for value: SIS.SP
            /// </summary>
            [EnumMember(Value = "SIS.SP")]
            SISSP = 24,

            /// <summary>
            /// Enum AASC for value: AASC
            /// </summary>
            [EnumMember(Value = "AASC")]
            AASC = 25,

            /// <summary>
            /// Enum FDO for value: FDO
            /// </summary>
            [EnumMember(Value = "FDO")]
            FDO = 26,

            /// <summary>
            /// Enum FDOPN for value: FDO.PN
            /// </summary>
            [EnumMember(Value = "FDO.PN")]
            FDOPN = 27,

            /// <summary>
            /// Enum FDOGEND for value: FDO.GEND
            /// </summary>
            [EnumMember(Value = "FDO.GEND")]
            FDOGEND = 28,

            /// <summary>
            /// Enum FDOPM for value: FDO.PM
            /// </summary>
            [EnumMember(Value = "FDO.PM")]
            FDOPM = 29,

            /// <summary>
            /// Enum FDODOUANES for value: FDO.DOUANES
            /// </summary>
            [EnumMember(Value = "FDO.DOUANES")]
            FDODOUANES = 30,

            /// <summary>
            /// Enum AUTRE for value: AUTRE
            /// </summary>
            [EnumMember(Value = "AUTRE")]
            AUTRE = 31,

            /// <summary>
            /// Enum AUTREADM for value: AUTRE.ADM
            /// </summary>
            [EnumMember(Value = "AUTRE.ADM")]
            AUTREADM = 32,

            /// <summary>
            /// Enum AUTREDAE for value: AUTRE.DAE
            /// </summary>
            [EnumMember(Value = "AUTRE.DAE")]
            AUTREDAE = 33,

            /// <summary>
            /// Enum AUTREAUTRE for value: AUTRE.AUTRE
            /// </summary>
            [EnumMember(Value = "AUTRE.AUTRE")]
            AUTREAUTRE = 34
        }


        /// <summary>
        /// Précise le type de moyen engagé dans l&#39;intervention (SMUR, TSU, HOSPIT, etc.).  A valoriser par un code de la nomenclature SI-SAMU-TYPE_MOYEN.
        /// </summary>
        /// <value>Précise le type de moyen engagé dans l&#39;intervention (SMUR, TSU, HOSPIT, etc.).  A valoriser par un code de la nomenclature SI-SAMU-TYPE_MOYEN.</value>
        /*
        <example>example.json#/orientation/decision/resourceType</example>
        */
        [DataMember(Name = "resourceType", IsRequired = true, EmitDefaultValue = true)]
        public ResourceTypeEnum ResourceType { get; set; }
        /// <summary>
        /// Précise le type de véhicule terrestre / aérien / maritime engagé dans l&#39;intervention. A valoriser par un code de la nomenclature SI-SAMU-TYPE_VECTEUR.
        /// </summary>
        /// <value>Précise le type de véhicule terrestre / aérien / maritime engagé dans l&#39;intervention. A valoriser par un code de la nomenclature SI-SAMU-TYPE_VECTEUR.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum VehicleTypeEnum
        {
            /// <summary>
            /// Enum AASC for value: AASC
            /// </summary>
            [EnumMember(Value = "AASC")]
            AASC = 1,

            /// <summary>
            /// Enum AASCVLSC for value: AASC.VLSC
            /// </summary>
            [EnumMember(Value = "AASC.VLSC")]
            AASCVLSC = 2,

            /// <summary>
            /// Enum AASCVPSP for value: AASC.VPSP
            /// </summary>
            [EnumMember(Value = "AASC.VPSP")]
            AASCVPSP = 3,

            /// <summary>
            /// Enum AASCAUTRESC for value: AASC.AUTRESC
            /// </summary>
            [EnumMember(Value = "AASC.AUTRESC")]
            AASCAUTRESC = 4,

            /// <summary>
            /// Enum AUTREVEC for value: AUTREVEC
            /// </summary>
            [EnumMember(Value = "AUTREVEC")]
            AUTREVEC = 5,

            /// <summary>
            /// Enum AUTREVECAPIED for value: AUTREVEC.APIED
            /// </summary>
            [EnumMember(Value = "AUTREVEC.APIED")]
            AUTREVECAPIED = 6,

            /// <summary>
            /// Enum AUTREVECAVION for value: AUTREVEC.AVION
            /// </summary>
            [EnumMember(Value = "AUTREVEC.AVION")]
            AUTREVECAVION = 7,

            /// <summary>
            /// Enum AUTREVECPERSO for value: AUTREVEC.PERSO
            /// </summary>
            [EnumMember(Value = "AUTREVEC.PERSO")]
            AUTREVECPERSO = 8,

            /// <summary>
            /// Enum AUTREVECTAXI for value: AUTREVEC.TAXI
            /// </summary>
            [EnumMember(Value = "AUTREVEC.TAXI")]
            AUTREVECTAXI = 9,

            /// <summary>
            /// Enum AUTREVECTRAIN for value: AUTREVEC.TRAIN
            /// </summary>
            [EnumMember(Value = "AUTREVEC.TRAIN")]
            AUTREVECTRAIN = 10,

            /// <summary>
            /// Enum AUTREVECTRANSP for value: AUTREVEC.TRANSP
            /// </summary>
            [EnumMember(Value = "AUTREVEC.TRANSP")]
            AUTREVECTRANSP = 11,

            /// <summary>
            /// Enum AUTREVECAUTRE for value: AUTREVEC.AUTRE
            /// </summary>
            [EnumMember(Value = "AUTREVEC.AUTRE")]
            AUTREVECAUTRE = 12,

            /// <summary>
            /// Enum AUTREVECAUTRETRA for value: AUTREVEC.AUTRETRA
            /// </summary>
            [EnumMember(Value = "AUTREVEC.AUTRETRA")]
            AUTREVECAUTRETRA = 13,

            /// <summary>
            /// Enum FSI for value: FSI
            /// </summary>
            [EnumMember(Value = "FSI")]
            FSI = 14,

            /// <summary>
            /// Enum FSIHELIFSI for value: FSI.HELIFSI
            /// </summary>
            [EnumMember(Value = "FSI.HELIFSI")]
            FSIHELIFSI = 15,

            /// <summary>
            /// Enum FSIVLFSI for value: FSI.VLFSI
            /// </summary>
            [EnumMember(Value = "FSI.VLFSI")]
            FSIVLFSI = 16,

            /// <summary>
            /// Enum FSIFFSI for value: FSI.FFSI
            /// </summary>
            [EnumMember(Value = "FSI.FFSI")]
            FSIFFSI = 17,

            /// <summary>
            /// Enum FSIVHFSI for value: FSI.VHFSI
            /// </summary>
            [EnumMember(Value = "FSI.VHFSI")]
            FSIVHFSI = 18,

            /// <summary>
            /// Enum LIB for value: LIB
            /// </summary>
            [EnumMember(Value = "LIB")]
            LIB = 19,

            /// <summary>
            /// Enum LIBMEDV for value: LIB.MEDV
            /// </summary>
            [EnumMember(Value = "LIB.MEDV")]
            LIBMEDV = 20,

            /// <summary>
            /// Enum LIBINF for value: LIB.INF
            /// </summary>
            [EnumMember(Value = "LIB.INF")]
            LIBINF = 21,

            /// <summary>
            /// Enum LIBAUTREPRO for value: LIB.AUTREPRO
            /// </summary>
            [EnumMember(Value = "LIB.AUTREPRO")]
            LIBAUTREPRO = 22,

            /// <summary>
            /// Enum SIS for value: SIS
            /// </summary>
            [EnumMember(Value = "SIS")]
            SIS = 23,

            /// <summary>
            /// Enum SISDRAGON for value: SIS.DRAGON
            /// </summary>
            [EnumMember(Value = "SIS.DRAGON")]
            SISDRAGON = 24,

            /// <summary>
            /// Enum SISAVSC for value: SIS.AVSC
            /// </summary>
            [EnumMember(Value = "SIS.AVSC")]
            SISAVSC = 25,

            /// <summary>
            /// Enum SISFEUSIS for value: SIS.FEUSIS
            /// </summary>
            [EnumMember(Value = "SIS.FEUSIS")]
            SISFEUSIS = 26,

            /// <summary>
            /// Enum SISGRIMP for value: SIS.GRIMP
            /// </summary>
            [EnumMember(Value = "SIS.GRIMP")]
            SISGRIMP = 27,

            /// <summary>
            /// Enum SISNAVISIS for value: SIS.NAVISIS
            /// </summary>
            [EnumMember(Value = "SIS.NAVISIS")]
            SISNAVISIS = 28,

            /// <summary>
            /// Enum SISPCSIS for value: SIS.PCSIS
            /// </summary>
            [EnumMember(Value = "SIS.PCSIS")]
            SISPCSIS = 29,

            /// <summary>
            /// Enum SISSRSIS for value: SIS.SRSIS
            /// </summary>
            [EnumMember(Value = "SIS.SRSIS")]
            SISSRSIS = 30,

            /// <summary>
            /// Enum SISVCH for value: SIS.VCH
            /// </summary>
            [EnumMember(Value = "SIS.VCH")]
            SISVCH = 31,

            /// <summary>
            /// Enum SISVLCG for value: SIS.VLCG
            /// </summary>
            [EnumMember(Value = "SIS.VLCG")]
            SISVLCG = 32,

            /// <summary>
            /// Enum SISVLISP for value: SIS.VLISP
            /// </summary>
            [EnumMember(Value = "SIS.VLISP")]
            SISVLISP = 33,

            /// <summary>
            /// Enum SISVLMSP for value: SIS.VLMSP
            /// </summary>
            [EnumMember(Value = "SIS.VLMSP")]
            SISVLMSP = 34,

            /// <summary>
            /// Enum SISVLSIS for value: SIS.VLSIS
            /// </summary>
            [EnumMember(Value = "SIS.VLSIS")]
            SISVLSIS = 35,

            /// <summary>
            /// Enum SISVPL for value: SIS.VPL
            /// </summary>
            [EnumMember(Value = "SIS.VPL")]
            SISVPL = 36,

            /// <summary>
            /// Enum SISVPMA for value: SIS.VPMA
            /// </summary>
            [EnumMember(Value = "SIS.VPMA")]
            SISVPMA = 37,

            /// <summary>
            /// Enum SISVR for value: SIS.VR
            /// </summary>
            [EnumMember(Value = "SIS.VR")]
            SISVR = 38,

            /// <summary>
            /// Enum SISVSAV for value: SIS.VSAV
            /// </summary>
            [EnumMember(Value = "SIS.VSAV")]
            SISVSAV = 39,

            /// <summary>
            /// Enum SISMOYSSE for value: SIS.MOYSSE
            /// </summary>
            [EnumMember(Value = "SIS.MOYSSE")]
            SISMOYSSE = 40,

            /// <summary>
            /// Enum SISAUTRESIS for value: SIS.AUTRESIS
            /// </summary>
            [EnumMember(Value = "SIS.AUTRESIS")]
            SISAUTRESIS = 41,

            /// <summary>
            /// Enum SMUR for value: SMUR
            /// </summary>
            [EnumMember(Value = "SMUR")]
            SMUR = 42,

            /// <summary>
            /// Enum SMURVLM for value: SMUR.VLM
            /// </summary>
            [EnumMember(Value = "SMUR.VLM")]
            SMURVLM = 43,

            /// <summary>
            /// Enum SMURVL for value: SMUR.VL
            /// </summary>
            [EnumMember(Value = "SMUR.VL")]
            SMURVL = 44,

            /// <summary>
            /// Enum SMURPSM1 for value: SMUR.PSM1
            /// </summary>
            [EnumMember(Value = "SMUR.PSM1")]
            SMURPSM1 = 45,

            /// <summary>
            /// Enum SMURPSM2 for value: SMUR.PSM2
            /// </summary>
            [EnumMember(Value = "SMUR.PSM2")]
            SMURPSM2 = 46,

            /// <summary>
            /// Enum SMURPSM3 for value: SMUR.PSM3
            /// </summary>
            [EnumMember(Value = "SMUR.PSM3")]
            SMURPSM3 = 47,

            /// <summary>
            /// Enum SMURPSMP for value: SMUR.PSMP
            /// </summary>
            [EnumMember(Value = "SMUR.PSMP")]
            SMURPSMP = 48,

            /// <summary>
            /// Enum SMURVPC for value: SMUR.VPC
            /// </summary>
            [EnumMember(Value = "SMUR.VPC")]
            SMURVPC = 49,

            /// <summary>
            /// Enum SMURAR for value: SMUR.AR
            /// </summary>
            [EnumMember(Value = "SMUR.AR")]
            SMURAR = 50,

            /// <summary>
            /// Enum SMURARBAR for value: SMUR.AR-BAR
            /// </summary>
            [EnumMember(Value = "SMUR.AR-BAR")]
            SMURARBAR = 51,

            /// <summary>
            /// Enum SMURARPED for value: SMUR.AR-PED
            /// </summary>
            [EnumMember(Value = "SMUR.AR-PED")]
            SMURARPED = 52,

            /// <summary>
            /// Enum SMURHELISMUR for value: SMUR.HELISMUR
            /// </summary>
            [EnumMember(Value = "SMUR.HELISMUR")]
            SMURHELISMUR = 53,

            /// <summary>
            /// Enum SMURHELISAN for value: SMUR.HELISAN
            /// </summary>
            [EnumMember(Value = "SMUR.HELISAN")]
            SMURHELISAN = 54,

            /// <summary>
            /// Enum SMURAVSMUR for value: SMUR.AVSMUR
            /// </summary>
            [EnumMember(Value = "SMUR.AVSMUR")]
            SMURAVSMUR = 55,

            /// <summary>
            /// Enum SMURAVSAN for value: SMUR.AVSAN
            /// </summary>
            [EnumMember(Value = "SMUR.AVSAN")]
            SMURAVSAN = 56,

            /// <summary>
            /// Enum SMURNAVISMUR for value: SMUR.NAVISMUR
            /// </summary>
            [EnumMember(Value = "SMUR.NAVISMUR")]
            SMURNAVISMUR = 57,

            /// <summary>
            /// Enum TSU for value: TSU
            /// </summary>
            [EnumMember(Value = "TSU")]
            TSU = 58,

            /// <summary>
            /// Enum TSUVSL for value: TSU.VSL
            /// </summary>
            [EnumMember(Value = "TSU.VSL")]
            TSUVSL = 59,

            /// <summary>
            /// Enum TSUAMBGV for value: TSU.AMB-GV
            /// </summary>
            [EnumMember(Value = "TSU.AMB-GV")]
            TSUAMBGV = 60,

            /// <summary>
            /// Enum TSUAMBPV for value: TSU.AMB-PV
            /// </summary>
            [EnumMember(Value = "TSU.AMB-PV")]
            TSUAMBPV = 61,

            /// <summary>
            /// Enum TSUAMBBAR for value: TSU.AMB-BAR
            /// </summary>
            [EnumMember(Value = "TSU.AMB-BAR")]
            TSUAMBBAR = 62,

            /// <summary>
            /// Enum TSUAMB for value: TSU.AMB
            /// </summary>
            [EnumMember(Value = "TSU.AMB")]
            TSUAMB = 63
        }


        /// <summary>
        /// Précise le type de véhicule terrestre / aérien / maritime engagé dans l&#39;intervention. A valoriser par un code de la nomenclature SI-SAMU-TYPE_VECTEUR.
        /// </summary>
        /// <value>Précise le type de véhicule terrestre / aérien / maritime engagé dans l&#39;intervention. A valoriser par un code de la nomenclature SI-SAMU-TYPE_VECTEUR.</value>
        /*
        <example>example.json#/orientation/decision/vehicleType</example>
        */
        [DataMember(Name = "vehicleType", IsRequired = true, EmitDefaultValue = true)]
        public VehicleTypeEnum VehicleType { get; set; }
        /// <summary>
        /// Type d’équipe (médical, paramédicale, secouriste). A valoriser par un code de la nomenclature SI-SAMU-NIVSOIN.
        /// </summary>
        /// <value>Type d’équipe (médical, paramédicale, secouriste). A valoriser par un code de la nomenclature SI-SAMU-NIVSOIN.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum MedicalLevelEnum
        {
            /// <summary>
            /// Enum MED for value: MED
            /// </summary>
            [EnumMember(Value = "MED")]
            MED = 1,

            /// <summary>
            /// Enum PARAMED for value: PARAMED
            /// </summary>
            [EnumMember(Value = "PARAMED")]
            PARAMED = 2,

            /// <summary>
            /// Enum SECOURS for value: SECOURS
            /// </summary>
            [EnumMember(Value = "SECOURS")]
            SECOURS = 3,

            /// <summary>
            /// Enum SANS for value: SANS
            /// </summary>
            [EnumMember(Value = "SANS")]
            SANS = 4
        }


        /// <summary>
        /// Type d’équipe (médical, paramédicale, secouriste). A valoriser par un code de la nomenclature SI-SAMU-NIVSOIN.
        /// </summary>
        /// <value>Type d’équipe (médical, paramédicale, secouriste). A valoriser par un code de la nomenclature SI-SAMU-NIVSOIN.</value>
        /*
        <example>example.json#/orientation/decision/medicalLevel</example>
        */
        [DataMember(Name = "medicalLevel", IsRequired = true, EmitDefaultValue = true)]
        public MedicalLevelEnum MedicalLevel { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Decision" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Decision() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Decision" /> class.
        /// </summary>
        /// <param name="resourceType">Précise le type de moyen engagé dans l&#39;intervention (SMUR, TSU, HOSPIT, etc.).  A valoriser par un code de la nomenclature SI-SAMU-TYPE_MOYEN. (required).</param>
        /// <param name="vehicleType">Précise le type de véhicule terrestre / aérien / maritime engagé dans l&#39;intervention. A valoriser par un code de la nomenclature SI-SAMU-TYPE_VECTEUR. (required).</param>
        /// <param name="medicalLevel">Type d’équipe (médical, paramédicale, secouriste). A valoriser par un code de la nomenclature SI-SAMU-NIVSOIN. (required).</param>
        public Decision(ResourceTypeEnum resourceType = default(ResourceTypeEnum), VehicleTypeEnum vehicleType = default(VehicleTypeEnum), MedicalLevelEnum medicalLevel = default(MedicalLevelEnum))
        {
            this.ResourceType = resourceType;
            this.VehicleType = vehicleType;
            this.MedicalLevel = medicalLevel;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Decision {\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  VehicleType: ").Append(VehicleType).Append("\n");
            sb.Append("  MedicalLevel: ").Append(MedicalLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
