/*
 * OpenAPI
 *
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HubsanteModel/Rpis.Client.OpenAPIDateConverter;

namespace HubsanteModel/Rpis.Model
{
    /// <summary>
    /// Rpis
    /// </summary>
    [DataContract(Name = "rpis")]
    public partial class Rpis : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Rpis" /> class.
        /// </summary>
        /// <param name="context">context.</param>
        /// <param name="regulation">regulation.</param>
        /// <param name="patient">patient.</param>
        /// <param name="intervention">intervention.</param>
        /// <param name="orientation">orientation.</param>
        public Rpis(Event context = default(Event), Regulation regulation = default(Regulation), Patient patient = default(Patient), Intervention intervention = default(Intervention), Orientation orientation = default(Orientation))
        {
            this.Context = context;
            this.Regulation = regulation;
            this.Patient = patient;
            this.Intervention = intervention;
            this.Orientation = orientation;
        }

        /// <summary>
        /// Gets or Sets Context
        /// </summary>
        [DataMember(Name = "context", EmitDefaultValue = false)]
        public Event Context { get; set; }

        /// <summary>
        /// Gets or Sets Regulation
        /// </summary>
        [DataMember(Name = "regulation", EmitDefaultValue = false)]
        public Regulation Regulation { get; set; }

        /// <summary>
        /// Gets or Sets Patient
        /// </summary>
        [DataMember(Name = "patient", EmitDefaultValue = false)]
        public Patient Patient { get; set; }

        /// <summary>
        /// Gets or Sets Intervention
        /// </summary>
        [DataMember(Name = "intervention", EmitDefaultValue = false)]
        public Intervention Intervention { get; set; }

        /// <summary>
        /// Gets or Sets Orientation
        /// </summary>
        [DataMember(Name = "orientation", EmitDefaultValue = false)]
        public Orientation Orientation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Rpis {\n");
            sb.Append("  Context: ").Append(Context).Append("\n");
            sb.Append("  Regulation: ").Append(Regulation).Append("\n");
            sb.Append("  Patient: ").Append(Patient).Append("\n");
            sb.Append("  Intervention: ").Append(Intervention).Append("\n");
            sb.Append("  Orientation: ").Append(Orientation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
