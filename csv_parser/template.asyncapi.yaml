asyncapi: 3.0.0
info:
  title: Hub Santé - Modèles
  version: '1.0'
  description: >
    Le Hub Santé permet le partage d'informations entre acteurs du monde de la Santé.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
defaultContentType: application/json
servers:
  bac-a-sable:
    host: 'messaging.bac-a-sable.hub.esante.gouv.fr:5671'
    protocol: amqps
    protocolVersion: 0-9-1
    description: Instance "bac à sable" du Hub Sante déployée dans le Cloud.
    security:
      - $ref: '#/components/securitySchemes/tlsAuthIGCTest'
  pre-prod:
    host: 'messaging.pre-prod.hub.esante.gouv.fr:5671'
    protocol: amqps
    protocolVersion: 0-9-1
    description: Instance "pré-prod" du Hub Sante déployée dans le Cloud.
    security:
      - $ref: '#/components/securitySchemes/tlsAuthIGC'
  prod:
    host: 'messaging.hub.esante.gouv.fr:5671'
    protocol: amqps
    protocolVersion: 0-9-1
    description: Instance de production du Hub Sante déployée dans le Cloud.
    security:
      - $ref: '#/components/securitySchemes/tlsAuthIGC'
channels:
  '{clientId}':
    address: '{clientId}'
    messages:
      edxlMessage:
        $ref: '#/components/messages/edxlMessage'
    description: >-
      Exchange d'entrée avec un topic spécifique à chaque client (routingKey égale à son clientId) pour l'envoi de tous les messages
    parameters:
      clientId:
        $ref: '#/components/parameters/clientId'
    bindings:
      # Ref:. https://github.com/asyncapi/bindings/tree/master/amqp#channel
      amqp:
        is: routingKey
        exchange:
          name: hubsante
          type: topic
          durable: true
          autoDelete: false
          vhost: /
  '{clientId}.message':
    address: '{clientId}.message'
    messages:
      edxlMessage:
        $ref: '#/components/messages/edxlMessage'
    description: >- 
      File spécifique à chaque client pour la réception de messages fonctionnels
    parameters:
      clientId:
        $ref: '#/components/parameters/clientId'
    bindings:
      # Ref:. https://github.com/asyncapi/bindings/tree/master/amqp#channel
      amqp:
        is: queue
        queue:
          name: '{clientId}.message'
          durable: true
          exclusive: false
          autoDelete: false
          vhost: /
  '{clientId}.ack':
    address: '{clientId}.ack'
    messages:
      edxlMessage:
        $ref: '#/components/messages/edxlMessage'
    description: >-
      File spécifique à chaque client pour la réception des acquittements de réception finale
    parameters:
      clientId:
        $ref: '#/components/parameters/clientId'
    bindings:
      # Ref:. https://github.com/asyncapi/bindings/tree/master/amqp#channel
      amqp:
        is: queue
        queue:
          name: '{clientId}.ack'
          durable: true
          exclusive: false
          autoDelete: false
          vhost: /
  '{clientId}.info':
    address: '{clientId}.info'
    messages:
      edxlMessage:
        $ref: '#/components/messages/edxlMessage'
    description: >-
      File spécifique à chaque client pour la réception des informations et erreurs
      complémentaires liées au fonctionnement et aux échanges portés par le Hub Santé
    parameters:
      clientId:
        $ref: '#/components/parameters/clientId'
    bindings:
      # Ref:. https://github.com/asyncapi/bindings/tree/master/amqp#channel
      amqp:
        is: queue
        queue:
          name: '{clientId}.info'
          durable: true
          exclusive: false
          autoDelete: false
          vhost: /
operations:
  publish:
    title: Publication
    summary: Publication de tous les types de messages sur le Hub Santé
    # description: ...
    action: send
    channel:
      $ref: '#/channels/{clientId}'
    messages:
      - $ref: '#/channels/{clientId}/messages/edxlMessage'
    bindings:
      # Ref.: https://github.com/asyncapi/bindings/tree/master/amqp#operation-binding-object
      amqp:
        expiration: 86400000
        userId: '{clientId}'
        cc: [ '{clientId}' ]
        # priority: 10
        deliveryMode: 2  # Persistent
        mandatory: true
        # bcc: [ ]
        # timestamp: true
        ack: true
  receiveMessage:
    title: Réception de messages fonctionnels
    # summary: ...
    # description: ...
    action: receive
    channel:
      $ref: '#/channels/{clientId}.message'
    messages:
      - $ref: '#/channels/{clientId}.message/messages/edxlMessage'
    bindings:
      # Ref.: https://github.com/asyncapi/bindings/tree/master/amqp#operation-binding-object
      amqp:
        expiration: 86400000
        userId: '{otherClientId}'
        cc: [ '{otherClientId}' ]
        # priority: 10
        deliveryMode: 2  # Persistent
        mandatory: true
        # bcc: [ ]
        # timestamp: true
        ack: true
  receiveAck:
    title: Réception de messages d'acquittement de réception finale
    # summary: ...
    # description: ...
    action: receive
    channel:
      $ref: '#/channels/{clientId}.ack'
    messages:
      - $ref: '#/channels/{clientId}.ack/messages/edxlMessage'
    bindings:
      # Ref.: https://github.com/asyncapi/bindings/tree/master/amqp#operation-binding-object
      amqp:
        expiration: 86400000
        userId: '{otherClientId}'
        cc: [ '{otherClientId}' ]
        # priority: 10
        deliveryMode: 2  # Persistent
        mandatory: true
        # bcc: [ ]
        # timestamp: true
        ack: true
  receiveInfo:
    title: Réception de messages d'info
    # summary: ...
    # description: ...
    action: receive
    channel:
      $ref: '#/channels/{clientId}.info'
    messages:
      - $ref: '#/channels/{clientId}.info/messages/edxlMessage'
    bindings:
      # Ref.: https://github.com/asyncapi/bindings/tree/master/amqp#operation-binding-object
      amqp:
        expiration: 86400000
        userId: '{otherClientId}'
        cc: [ '{otherClientId}' ]
        # priority: 10
        deliveryMode: 2  # Persistent
        mandatory: true
        # bcc: [ ]
        # timestamp: true
        ack: true
components:
  securitySchemes:
    tlsAuthIGC:
      type: X509
      description: >-
        Un certificat SSL_SERV signé par l'IGC Santé PROD est nécessaire pour l'authentification mTLS
    tlsAuthIGCTest:
      type: X509
      description: >-
        Un certificat SSL_SERV signé par l'IGC Santé TEST est nécessaire pour l'authentification mTLS
  parameters:
    clientId:
      description: L'identifiant du client
    otherClientId:
      description: L'identifiant d'un autre client du Hub Santé
  messages:
    edxlMessage:
      title: Message au standard EDXL
      summary: >- 
        Message au standard EDXL transportable par le Hub, comportant une partie adressage et une partie contenu. La partie contenu peut respecter différentes spécifications fonctionnelles.
      headers:
        type: object
        properties:
          correlationId:
            description: Correlation ID set by application
            type: string
          applicationInstanceId:
            description: Unique identifier for a given instance of the publishing application
            type: string
      payload:
        $ref: '#/components/schemas/EdxlMessage'
  schemas:
    EdxlMessage:
      properties:
        distributionID:
          type: string
        senderID:
          type: string
        dateTimeSent:
          type: string
          format: date-time
        dateTimeExpires:
          type: string
          format: date-time
        distributionStatus:
          $ref: '#/components/schemas/DistributionStatus'
        distributionKind:
          $ref: '#/components/schemas/DistributionKind'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        content:
          $ref: '#/components/schemas/Content'
      additionalProperties: false
      required:
        - distributionID
        - senderID
        - dateTimeSent
        - dateTimeExpires
        - distributionStatus
        - distributionKind
        - descriptor
        - content
    DistributionStatus:
      type: string
      enum:
        - Actual
        - Exercise
        - System
        - Test
        - Unknown
        - NoAppropriateDefault
    DistributionKind:
      type: string
      enum:
        - Report
        - Update
        - Cancel
        - Request
        - Response
        - Dispatch
        - Ack
        - Error
        - SensorConfiguration
        - SensorControl
        - SensorStatus
        - SensorDetection
        - Unknown
        - NoAppropriateDefault
    Descriptor:
      properties:
        language:
          type: string
        explicitAddress:
          $ref: '#/components/schemas/ExplicitAddress'
      additionalProperties: false
      required:
        - language
        - explicitAddress
    ExplicitAddress:
      properties:
        explicitAddressScheme:
          type: string
        explicitAddressValue:
          type: string
      additionalProperties: false
      required:
        - explicitAddressScheme
        - explicitAddressValue
    Content:
      properties:
        contentObject:
          $ref: '#/components/schemas/ContentObject'
      additionalProperties: false
      required:
        - contentObject
    ContentObject:
      oneOf:
        - $ref: '#/components/schemas/JsonContent'
        - $ref: '#/components/schemas/ContentXML'
    JsonContent:
      properties:
        JsonContent:
          $ref: '#/components/schemas/EmbeddedJsonContent'
    ContentXML:
      properties:
        contentXML:
          $ref: '#/components/schemas/EmbeddedXMLContent'
    EmbeddedJsonContent:
      oneOf: []
    EmbeddedXMLContent:
      oneOf: []



